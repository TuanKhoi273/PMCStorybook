{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/Input.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ColorApp, FontText } from \"../index\";\nimport IconAwesome from \"@expo/vector-icons/Feather\";\nvar styles = StyleSheet.create({\n  placeholder: {\n    fontSize: 15,\n    lineHeight: 22\n  },\n  input: {\n    paddingVertical: 0,\n    fontSize: 14,\n    borderBottomWidth: 1,\n    height: 40,\n    borderColor: ColorApp.NEUTRAL.gray_02,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  textInputStyle: {\n    flex: 1,\n    color: \"black\",\n    paddingVertical: 0,\n    fontSize: 15,\n    lineHeight: 22,\n    borderWidth: 0\n  },\n  containerStyle: {\n    borderBottomWidth: 1\n  }\n});\n\nfunction Input(props) {\n  var _this = this;\n\n  var textInputRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _onPress = props.onPress,\n      value = props.value,\n      enableRightIcon = props.enableRightIcon,\n      _props$iconRightName = props.iconRightName,\n      iconRightName = _props$iconRightName === void 0 ? \"x\" : _props$iconRightName,\n      _props$iconRightColor = props.iconRightColor,\n      iconRightColor = _props$iconRightColor === void 0 ? \"black\" : _props$iconRightColor,\n      enableLeftIcon = props.enableLeftIcon,\n      _props$iconLeftName = props.iconLeftName,\n      iconLeftName = _props$iconLeftName === void 0 ? \"search\" : _props$iconLeftName,\n      _props$iconLeftColor = props.iconLeftColor,\n      iconLeftColor = _props$iconLeftColor === void 0 ? \"black\" : _props$iconLeftColor,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _onChangeText = props.onChangeText,\n      placeholder = props.placeholder,\n      customLeading = props.customLeading,\n      customTrailing = props.customTrailing,\n      keyboardType = props.keyboardType,\n      customStyle = props.customStyle,\n      isTextArea = props.isTextArea,\n      placeholderStyle = props.placeholderStyle,\n      onRightClick = props.onRightClick,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      _props$inputColor = props.inputColor,\n      inputColor = _props$inputColor === void 0 ? ColorApp.PRIMARY.blue_04 : _props$inputColor,\n      topLabel = props.topLabel,\n      containerStyle = props.containerStyle;\n\n  var getChild = function getChild() {\n    return React.createElement(View, {\n      style: [styles.containerStyle, {\n        borderColor: focus ? inputColor : ColorApp.NEUTRAL.gray_02\n      }, containerStyle != null ? containerStyle : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, topLabel ? React.createElement(FontText.SmallText, {\n      style: {\n        color: inputColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, topLabel) : null, React.createElement(View, {\n      style: [styles.input, customStyle ? customStyle : {}],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, customLeading ? customLeading : null, enableLeftIcon ? React.createElement(IconAwesome, {\n      name: iconLeftName,\n      size: 20,\n      color: focus ? inputColor : iconLeftColor,\n      style: {\n        marginRight: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }) : null, React.createElement(TextInput, {\n      onFocus: function onFocus() {\n        setFocus(true);\n      },\n      onBlur: function onBlur() {\n        setFocus(false);\n      },\n      ref: textInputRef,\n      numberOfLines: isTextArea ? 4 : null,\n      multiline: isTextArea ? true : false,\n      textAlignVertical: isTextArea ? \"top\" : \"center\",\n      style: styles.textInputStyle,\n      editable: editable,\n      placeholder: placeholder != null ? placeholder : \"\",\n      placeholderStyle: [styles.placeholder, placeholderStyle != null ? placeholderStyle : {}],\n      onChangeText: function onChangeText(value) {\n        if (_onChangeText) {\n          _onChangeText(value);\n        }\n      },\n      secureTextEntry: secureTextEntry,\n      keyboardType: keyboardType ? keyboardType : \"default\",\n      value: value,\n      underlineColorAndroid: \"transparent\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        if (onRightClick) {\n          onRightClick();\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, React.createElement(IconAwesome, {\n      name: iconRightName,\n      size: 20,\n      color: iconRightColor,\n      style: {\n        marginLeft: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    })), customTrailing ? customTrailing : null));\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, editable ? getChild() : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      _onPress();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, getChild()));\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/Input.js"],"names":["React","useEffect","useState","useRef","ColorApp","FontText","IconAwesome","styles","StyleSheet","create","placeholder","fontSize","lineHeight","input","paddingVertical","borderBottomWidth","height","borderColor","NEUTRAL","gray_02","flexDirection","alignItems","textInputStyle","flex","color","borderWidth","containerStyle","Input","props","textInputRef","focus","setFocus","onPress","value","enableRightIcon","iconRightName","iconRightColor","enableLeftIcon","iconLeftName","iconLeftColor","editable","onChangeText","customLeading","customTrailing","keyboardType","customStyle","isTextArea","placeholderStyle","onRightClick","secureTextEntry","inputColor","PRIMARY","blue_04","topLabel","getChild","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, TextInput } from \"react-native\";\nimport { ColorApp, FontText } from \"../index\";\nimport IconAwesome from \"react-native-vector-icons/Feather\";\nconst styles = StyleSheet.create({\n  placeholder: {\n    fontSize: 15,\n    lineHeight: 22,\n  },\n  input: {\n    // paddingHorizontal: 12,\n    paddingVertical: 0,\n    fontSize: 14,\n    borderBottomWidth: 1,\n    height: 40,\n    borderColor: ColorApp.NEUTRAL.gray_02,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    // backgroundColor: \"yellow\",\n    // backgroundColor: \"white\",\n  },\n  textInputStyle: {\n    flex: 1,\n    color: \"black\",\n    paddingVertical: 0,\n    fontSize: 15,\n    lineHeight: 22,\n    borderWidth: 0,\n  },\n  containerStyle: {\n    // backgroundColor: \"red\",\n    borderBottomWidth: 1,\n  },\n});\n\nfunction Input(props) {\n  const textInputRef = useRef(null);\n  const [focus, setFocus] = useState(false);\n  const {\n    onPress,\n    value,\n    enableRightIcon,\n    iconRightName = \"x\",\n    iconRightColor = \"black\",\n    enableLeftIcon,\n    iconLeftName = \"search\",\n    iconLeftColor = \"black\",\n    editable = true,\n    onChangeText,\n    placeholder,\n    customLeading,\n    customTrailing,\n    keyboardType,\n    customStyle,\n    isTextArea,\n    placeholderStyle,\n    onRightClick,\n    secureTextEntry = false,\n    inputColor = ColorApp.PRIMARY.blue_04,\n    topLabel,\n    containerStyle,\n  } = props;\n\n  const getChild = () => {\n    return (\n      <View\n        style={[\n          styles.containerStyle,\n          {\n            borderColor: focus ? inputColor : ColorApp.NEUTRAL.gray_02,\n            // flexDirection: \"row\",\n            // alignItems: \"center\",\n          },\n          containerStyle ?? {},\n        ]}\n      >\n        {topLabel ? (\n          <FontText.SmallText style={{ color: inputColor }}>\n            {topLabel}\n          </FontText.SmallText>\n        ) : null}\n        <View style={[styles.input, customStyle ? customStyle : {}]}>\n          {customLeading ? customLeading : null}\n          {enableLeftIcon ? (\n            <IconAwesome\n              name={iconLeftName}\n              size={20}\n              color={focus ? inputColor : iconLeftColor}\n              style={{ marginRight: 4 }}\n            />\n          ) : null}\n          <TextInput\n            onFocus={() => {\n              setFocus(true);\n            }}\n            onBlur={() => {\n              setFocus(false);\n            }}\n            ref={textInputRef}\n            numberOfLines={isTextArea ? 4 : null}\n            multiline={isTextArea ? true : false}\n            textAlignVertical={isTextArea ? \"top\" : \"center\"}\n            style={styles.textInputStyle}\n            editable={editable}\n            placeholder={placeholder ?? \"\"}\n            placeholderStyle={[styles.placeholder, placeholderStyle ?? {}]}\n            onChangeText={(value) => {\n              if (onChangeText) {\n                onChangeText(value);\n              }\n            }}\n            secureTextEntry={secureTextEntry}\n            keyboardType={keyboardType ? keyboardType : \"default\"}\n            value={value}\n            underlineColorAndroid=\"transparent\"\n          />\n          {/* {enableRightIcon ? ( */}\n          <TouchableOpacity\n            onPress={() => {\n              if (onRightClick) {\n                onRightClick();\n              }\n            }}\n          >\n            <IconAwesome\n              name={iconRightName}\n              size={20}\n              color={iconRightColor}\n              style={{ marginLeft: 4 }}\n            />\n          </TouchableOpacity>\n          {/* ) : null} */}\n          {customTrailing ? customTrailing : null}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View>\n      {editable ? (\n        getChild()\n      ) : (\n        <TouchableOpacity\n          onPress={() => {\n            onPress();\n          }}\n        >\n          {getChild()}\n        </TouchableOpacity>\n      )}\n      {/* {errorInputState && errorText ? (\n        <FontText.FontCaption\n          style={{ color: ColorApp.ERROR_COLOR, marginTop: 8 }}\n        >\n          {errorText ?? \"\"}\n        </FontText.FontCaption>\n      ) : null} */}\n    </View>\n  );\n}\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}