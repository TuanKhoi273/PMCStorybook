{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/6-Input.stories.js\";\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"..\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Input from \"./Input\";\nvar inputStories = storiesOf(\"Input\", module);\ninputStories.add(\"Import and Props\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, \"# Import\"), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, \"\\n            import { Input } from 'pharmacity-component-kits'\\n            \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, \"# Props\"), React.createElement(View, {\n      style: styles.table,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, generateRow(true, \"Name\", \"Type\", \"Default\"), generateRow(false, \"onPress\", \"Function\", \"null\"), generateRow(false, \"value\", \"String\", \"''\"), generateRow(false, \"customStyle\", \"Object\", \"Null\"), generateRow(false, \"enableRightIcon\", \"boolean\", \"false\"), generateRow(false, \"iconRightName\", \"String\", \"x\"), generateRow(false, \"iconRightColor\", \"String\", \"black\"), generateRow(false, \"enableLeftIcon\", \"boolean\", \"false\"), generateRow(false, \"iconLeftName\", \"String\", \"search\"), generateRow(false, \"iconLeftColor\", \"string\", \"black\"), generateRow(false, \"editable\", \"boolean\", \"true\"), generateRow(false, \"onChangeText\", \"Function\", \"null\"), generateRow(false, \"placeholder\", \"String\", \"'\"), generateRow(false, \"customLeading\", \"Component\", \"null\"), generateRow(false, \"customTrailing\", \"Component\", \"null\"), generateRow(false, \"keyboardType\", \"String\", \"default\"), generateRow(false, \"isTextArea\", \"boolean\", \"false\"), generateRow(false, \"placeholderStyle\", \"Object\", \"null\"), generateRow(false, \"onRightClick\", \"Function\", \"null\"), generateRow(false, \"secureTextEntry\", \"boolean\", \"false\"), generateRow(false, \"inputColor\", \"String\", \"ColorApp.PRIMARY.blue_04\"), generateRow(false, \"topLabel\", \"String\", \"''\"), generateRow(false, \"containerStyle\", \"Object\", \"{}\")), React.createElement(View, {\n      style: [styles.table, {\n        marginTop: 16,\n        marginBottom: 56\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, generateExplainRow(true, \"Name\", \"Explain\"), generateExplainRow(false, \"onPress\", \"Function when click Input\"), generateExplainRow(false, \"value\", \"Value of Input\"), generateExplainRow(false, \"customStyle\", \"Style custom for Input\"), generateExplainRow(false, \"enableRightIcon\", \"On or off right icon\"), generateExplainRow(false, \"iconRightName\", \"Icon name of right icon, use Feather Icon\"), generateExplainRow(false, \"iconRightColor\", \"Color of right icon\"), generateExplainRow(false, \"enableLeftIcon\", \"On or off left icon\"), generateExplainRow(false, \"iconLeftName\", \"Icon name of left icon, use Feather Icon\"), generateExplainRow(false, \"iconLeftColor\", \"Color of left icon\"), generateExplainRow(false, \"editable\", \"Set edittable for input\"), generateExplainRow(false, \"onChangeText\", \"Function when change text input\"), generateExplainRow(false, \"placeholder\", \"Placeholder of Input\"), generateExplainRow(false, \"customLeading\", \"If Use don't want use icon feature for left, you can you it to custom\"), generateExplainRow(false, \"customTrailing\", \"If Use don't want use icon feature for right, you can you it to custom\"), generateExplainRow(false, \"keyboardType\", \"Keyboard type of input\"), generateExplainRow(false, \"isTextArea\", \"If true, it's like TextArea\"), generateExplainRow(false, \"placeholderStyle\", \"Custom placeholder style \"), generateExplainRow(false, \"onRightClick\", \"Function when click right button, often reset text\"), generateExplainRow(false, \"secureTextEntry\", \"Secure text like Password input\"), generateExplainRow(false, \"inputColor\", \"Color of bottom line, icon, top label of input\"), generateExplainRow(false, \"topLabel\", \"value of top label.\"), generateExplainRow(false, \"containerStyle\", \"Use can't custom input with it, example margin with another component\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  });\n}).add(\"Example\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \"# Text Input Default\"), React.createElement(Input, {\n      placeholder: \"Your Phone Number\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"# Text Input With Close Button\"), React.createElement(Input, {\n      placeholder: \"Your Phone Number\",\n      enableRightIcon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Your Phone Number\",\n      enableRightIcon: true,\n      iconRightColor: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"\\n          <Input\\n          placeholder={\\\"Your Phone Number\\\"}\\n          enableRightIcon={true}\\n          iconRightColor={\\\"red\\\"}\\n        />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"# Text Input With Left Icon\"), React.createElement(Input, {\n      placeholder: \"test color\",\n      enableRightIcon: true,\n      enableLeftIcon: true,\n      iconRightColor: \"red\",\n      inputColor: ColorApp.ACCENT.blue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }), React.createElement(Input, {\n      customStype: {\n        borderWidth: 1,\n        borderRadius: 4,\n        paddingHorizontal: 16\n      },\n      placeholder: \"Your Phone Number\",\n      iconLeftName: \"activity\",\n      enableRightIcon: true,\n      enableLeftIcon: true,\n      value: \"abc\",\n      secureTextEntry: true,\n      onRightClick: function onRightClick() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, \"# Text Input With Top Label\"), React.createElement(Input, {\n      placeholder: \"Your Phone Number\",\n      enableRightIcon: true,\n      enableLeftIcon: true,\n      onRightClick: function onRightClick() {\n        alert(\"abc\");\n      },\n      topLabel: \"test\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, \"\\n           <Input\\n           containerStyle={{ marginTop: 16 }}\\n           placeholder={\\\"Your Phone Number\\\"}\\n           enableRightIcon={true}\\n           enableLeftIcon={true}\\n           onRightClick={() => {\\n             alert(\\\"abc\\\");\\n           }}\\n           // keyboardType={\\\"password\\\"}\\n           topLabel=\\\"test\\\"\\n         />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"# Text Input Custom\"), React.createElement(Input, {\n      containerStyle: {\n        marginVertical: 16,\n        borderWidth: 1,\n        borderRadius: 4,\n        paddingHorizontal: 16\n      },\n      placeholder: \"Your Phone Number\",\n      enableRightIcon: true,\n      enableLeftIcon: true,\n      onRightClick: function onRightClick() {\n        alert(\"abc\");\n      },\n      topLabel: \"test\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, \"\\n          <Input\\n          containerStyle={{\\n            marginVertical: 16,\\n            borderWidth: 1,\\n            borderRadius: 4,\\n            paddingHorizontal: 16,\\n          }}\\n          placeholder={\\\"Your Phone Number\\\"}\\n          enableRightIcon={true}\\n          enableLeftIcon={true}\\n          onRightClick={() => {\\n            alert(\\\"abc\\\");\\n          }}\\n          topLabel=\\\"test\\\"\\n        />\\n              \"), React.createElement(View, {\n      style: {\n        height: 56\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/6-Input.stories.js"],"names":["React","storiesOf","Markdown","StoryContainer","FontText","ColorApp","styles","generateRow","generateExplainRow","Input","inputStories","module","add","marginVertical","color","PRIMARY","blue_05","table","marginTop","marginBottom","ACCENT","blue","borderWidth","borderRadius","paddingHorizontal","alert","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"..\";\nimport { View } from \"react-native\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Input from \"./Input\";\n\nconst inputStories = storiesOf(\"Input\", module);\n\ninputStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n            import { Input } from 'pharmacity-component-kits'\n            `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"value\", \"String\", \"''\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"Null\")}\n            {generateRow(false, \"enableRightIcon\", \"boolean\", \"false\")}\n            {generateRow(false, \"iconRightName\", \"String\", \"x\")}\n\n            {generateRow(false, \"iconRightColor\", \"String\", \"black\")}\n            {generateRow(false, \"enableLeftIcon\", \"boolean\", \"false\")}\n            {generateRow(false, \"iconLeftName\", \"String\", \"search\")}\n            {generateRow(false, \"iconLeftColor\", \"string\", \"black\")}\n            {generateRow(false, \"editable\", \"boolean\", \"true\")}\n            {generateRow(false, \"onChangeText\", \"Function\", \"null\")}\n            {generateRow(false, \"placeholder\", \"String\", \"'\")}\n            {generateRow(false, \"customLeading\", \"Component\", \"null\")}\n            {generateRow(false, \"customTrailing\", \"Component\", \"null\")}\n\n            {generateRow(false, \"keyboardType\", \"String\", \"default\")}\n            {generateRow(false, \"isTextArea\", \"boolean\", \"false\")}\n\n            {generateRow(false, \"placeholderStyle\", \"Object\", \"null\")}\n            {generateRow(false, \"onRightClick\", \"Function\", \"null\")}\n            {generateRow(false, \"secureTextEntry\", \"boolean\", \"false\")}\n            {generateRow(\n              false,\n              \"inputColor\",\n              \"String\",\n              \"ColorApp.PRIMARY.blue_04\"\n            )}\n            {generateRow(false, \"topLabel\", \"String\", \"''\")}\n            {generateRow(false, \"containerStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(false, \"onPress\", \"Function when click Input\")}\n            {generateExplainRow(false, \"value\", \"Value of Input\")}\n            {generateExplainRow(false, \"customStyle\", \"Style custom for Input\")}\n\n            {generateExplainRow(\n              false,\n              \"enableRightIcon\",\n              \"On or off right icon\"\n            )}\n            {generateExplainRow(\n              false,\n              \"iconRightName\",\n              \"Icon name of right icon, use Feather Icon\"\n            )}\n\n            {generateExplainRow(false, \"iconRightColor\", \"Color of right icon\")}\n            {generateExplainRow(false, \"enableLeftIcon\", \"On or off left icon\")}\n            {generateExplainRow(\n              false,\n              \"iconLeftName\",\n              \"Icon name of left icon, use Feather Icon\"\n            )}\n            {generateExplainRow(false, \"iconLeftColor\", \"Color of left icon\")}\n            {generateExplainRow(false, \"editable\", \"Set edittable for input\")}\n            {generateExplainRow(\n              false,\n              \"onChangeText\",\n              \"Function when change text input\"\n            )}\n            {generateExplainRow(false, \"placeholder\", \"Placeholder of Input\")}\n            {generateExplainRow(\n              false,\n              \"customLeading\",\n              \"If Use don't want use icon feature for left, you can you it to custom\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTrailing\",\n              \"If Use don't want use icon feature for right, you can you it to custom\"\n            )}\n\n            {generateExplainRow(\n              false,\n              \"keyboardType\",\n              \"Keyboard type of input\"\n            )}\n            {generateExplainRow(\n              false,\n              \"isTextArea\",\n              \"If true, it's like TextArea\"\n            )}\n\n            {generateExplainRow(\n              false,\n              \"placeholderStyle\",\n              \"Custom placeholder style \"\n            )}\n            {generateExplainRow(\n              false,\n              \"onRightClick\",\n              \"Function when click right button, often reset text\"\n            )}\n            {generateExplainRow(\n              false,\n              \"secureTextEntry\",\n              \"Secure text like Password input\"\n            )}\n            {generateExplainRow(\n              false,\n              \"inputColor\",\n              \"Color of bottom line, icon, top label of input\"\n            )}\n            {generateExplainRow(false, \"topLabel\", \"value of top label.\")}\n            {generateExplainRow(\n              false,\n              \"containerStyle\",\n              \"Use can't custom input with it, example margin with another component\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input Default\n          </FontText.Heading2>\n\n          <Input placeholder={\"Your Phone Number\"} />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Close Button\n          </FontText.Heading2>\n\n          <Input placeholder={\"Your Phone Number\"} enableRightIcon={true} />\n          <Input\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            iconRightColor={\"red\"}\n          />\n\n          <Markdown>{`\n          <Input\n          placeholder={\"Your Phone Number\"}\n          enableRightIcon={true}\n          iconRightColor={\"red\"}\n        />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Left Icon\n          </FontText.Heading2>\n          <Input\n            placeholder={\"test color\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            iconRightColor={\"red\"}\n            inputColor={ColorApp.ACCENT.blue}\n          />\n\n          <Input\n            customStype={{\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            iconLeftName={\"activity\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            value={\"abc\"}\n            secureTextEntry={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n          />\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input With Top Label\n          </FontText.Heading2>\n          <Input\n            // containerStyle={{ marginTop: 16 }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            // keyboardType={\"password\"}\n            topLabel=\"test\"\n          />\n\n          <Markdown>{`\n           <Input\n           containerStyle={{ marginTop: 16 }}\n           placeholder={\"Your Phone Number\"}\n           enableRightIcon={true}\n           enableLeftIcon={true}\n           onRightClick={() => {\n             alert(\"abc\");\n           }}\n           // keyboardType={\"password\"}\n           topLabel=\"test\"\n         />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Text Input Custom\n          </FontText.Heading2>\n\n          <Input\n            containerStyle={{\n              marginVertical: 16,\n              borderWidth: 1,\n              borderRadius: 4,\n              paddingHorizontal: 16,\n            }}\n            placeholder={\"Your Phone Number\"}\n            enableRightIcon={true}\n            enableLeftIcon={true}\n            onRightClick={() => {\n              alert(\"abc\");\n            }}\n            topLabel=\"test\"\n          />\n\n          <Markdown>{`\n          <Input\n          containerStyle={{\n            marginVertical: 16,\n            borderWidth: 1,\n            borderRadius: 4,\n            paddingHorizontal: 16,\n          }}\n          placeholder={\"Your Phone Number\"}\n          enableRightIcon={true}\n          enableLeftIcon={true}\n          onRightClick={() => {\n            alert(\"abc\");\n          }}\n          topLabel=\"test\"\n        />\n              `}</Markdown>\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n"]},"metadata":{},"sourceType":"module"}