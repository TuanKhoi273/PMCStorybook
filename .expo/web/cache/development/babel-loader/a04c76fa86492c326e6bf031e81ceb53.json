{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/3-Avatar.stories.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Avatar from \"./Avatar\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport { ButtonState, ButtonType } from \"../../component\";\nvar avatarStories = storiesOf(\"Avatar\", module);\navatarStories.addDecorator(withKnobs);\navatarStories.add(\"Import and Props\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"# Import\"), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"\\n        import { Avatar } from 'pharmacity-component-kits'\\n        \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, \"# Props\"), React.createElement(View, {\n      style: styles.table,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, generateRow(true, \"Name\", \"Type\", \"Default\"), generateRow(false, \"size\", \"Double\", \"48.0\"), generateRow(false, \"rounded\", \"boolean\", \"false\"), generateRow(false, \"name\", \"String\", \"'avatar'\"), generateRow(false, \"onPress\", \"Function\", \"null\"), generateRow(false, \"customStyle\", \"Object\", \"{}\"), generateRow(false, \"image\", \"String\", \"''\"), generateRow(false, \"customTextStyle\", \"Object\", \"{}\")), React.createElement(View, {\n      style: [styles.table, {\n        marginTop: 16,\n        marginBottom: 56\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, generateExplainRow(true, \"Name\", \"Explain\"), generateExplainRow(false, \"size\", \"Size of Avatar\"), generateExplainRow(false, \"rounded\", \"if you want avatar type Round, You can set it True\"), generateExplainRow(false, \"name\", \"If image props empty, Avatar get 2 first letter to create Avatar\"), generateExplainRow(false, \"onPress\", \"Function when click Avatar\"), generateExplainRow(false, \"customStyle\", \"You can custom Avatar with it\"), generateExplainRow(false, \"image\", \"Image url for Avatar\"), generateExplainRow(false, \"customTextStyle\", \"You can custom text of avatar with it\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n}).add(\"Example\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"# Avatar Default\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, React.createElement(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), React.createElement(Avatar, {\n      customTextStyle: {\n        fontSize: 25\n      },\n      customStyle: {\n        marginHorizontal: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"# Avatar Round\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, React.createElement(Avatar, {\n      rounded: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), React.createElement(Avatar, {\n      rounded: true,\n      name: \"Khoi\",\n      customStyle: {\n        marginHorizontal: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"\\n            <Avatar\\n            rounded={true}\\n            name=\\\"Khoi\\\"\\n            customStyle={{ marginHorizontal: 8 }}\\n          />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"# Avatar with Image\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, React.createElement(Avatar, {\n      image: \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), React.createElement(Avatar, {\n      rounded: true,\n      name: \"Khoi\",\n      image: \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\",\n      customStyle: {\n        marginHorizontal: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    })), React.createElement(Avatar, {\n      rounded: true,\n      size: 100,\n      name: \"Khoi\",\n      image: \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\",\n      customStyle: {\n        marginVertical: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, \"\\n            <Avatar\\n            rounded={true}\\n            size={100}\\n            name=\\\"Khoi\\\"\\n            image={\\n              \\\"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\\\"\\n            }\\n            customStyle={{ marginVertical: 8 }}\\n          />\\n              \"), React.createElement(FontText.Heading3, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.SEMATIC.green\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"If no image URL avatar render with 2 first letter of name props.\"), React.createElement(View, {\n      style: {\n        height: 56\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/3-Avatar.stories.js"],"names":["React","storiesOf","Avatar","action","boolean","withKnobs","Markdown","StoryContainer","FontText","ColorApp","styles","generateRow","generateExplainRow","ButtonState","ButtonType","avatarStories","module","addDecorator","add","marginVertical","color","PRIMARY","blue_05","table","marginTop","marginBottom","flexDirection","fontSize","marginHorizontal","SEMATIC","green","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport Avatar from \"./Avatar\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst avatarStories = storiesOf(\"Avatar\", module);\n\n// lets storybook know to show the knobs addon for this story\navatarStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\navatarStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n        import { Avatar } from 'pharmacity-component-kits'\n        `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"size\", \"Double\", \"48.0\")}\n            {generateRow(false, \"rounded\", \"boolean\", \"false\")}\n            {generateRow(false, \"name\", \"String\", \"'avatar'\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n            {generateRow(false, \"image\", \"String\", \"''\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"{}\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(false, \"size\", \"Size of Avatar\")}\n            {generateExplainRow(\n              false,\n              \"rounded\",\n              \"if you want avatar type Round, You can set it True\"\n            )}\n            {generateExplainRow(\n              false,\n              \"name\",\n              \"If image props empty, Avatar get 2 first letter to create Avatar\"\n            )}\n            {generateExplainRow(false, \"onPress\", \"Function when click Avatar\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"You can custom Avatar with it\"\n            )}\n            {generateExplainRow(false, \"image\", \"Image url for Avatar\")}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"You can custom text of avatar with it\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar Default\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\" }}>\n            <Avatar />\n            <Avatar\n              customTextStyle={{ fontSize: 25 }}\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar Round\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n            <Avatar rounded={true} />\n            <Avatar\n              rounded={true}\n              name=\"Khoi\"\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n\n          <Markdown>{`\n            <Avatar\n            rounded={true}\n            name=\"Khoi\"\n            customStyle={{ marginHorizontal: 8 }}\n          />\n              `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Avatar with Image\n          </FontText.Heading2>\n          <View style={{ flexDirection: \"row\" }}>\n            <Avatar\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n            />\n            <Avatar\n              rounded={true}\n              name=\"Khoi\"\n              image={\n                \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n              }\n              customStyle={{ marginHorizontal: 8 }}\n            />\n          </View>\n          <Avatar\n            rounded={true}\n            size={100}\n            name=\"Khoi\"\n            image={\n              \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n            }\n            customStyle={{ marginVertical: 8 }}\n          />\n          <Markdown>{`\n            <Avatar\n            rounded={true}\n            size={100}\n            name=\"Khoi\"\n            image={\n              \"https://interactive-examples.mdn.mozilla.net/media/cc0-images/grapefruit-slice-332-332.jpg\"\n            }\n            customStyle={{ marginVertical: 8 }}\n          />\n              `}</Markdown>\n\n          <FontText.Heading3\n            style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n          >\n            If no image URL avatar render with 2 first letter of name props.\n          </FontText.Heading3>\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n"]},"metadata":{},"sourceType":"module"}