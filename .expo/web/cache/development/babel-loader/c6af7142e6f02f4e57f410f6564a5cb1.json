{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-markdown-display/src/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport parser from \"./lib/parser\";\nimport getUniqueID from \"./lib/util/getUniqueID\";\nimport hasParents from \"./lib/util/hasParents\";\nimport openUrl from \"./lib/util/openUrl\";\nimport tokensToAST from \"./lib/util/tokensToAST\";\nimport renderRules from \"./lib/renderRules\";\nimport AstRenderer from \"./lib/AstRenderer\";\nimport MarkdownIt from 'markdown-it';\nimport removeTextStyleProps from \"./lib/util/removeTextStyleProps\";\nimport { styles } from \"./lib/styles\";\nimport { stringToTokens } from \"./lib/util/stringToTokens\";\nimport FitImage from 'react-native-fit-image';\nimport textStyleProps from \"./lib/data/textStyleProps\";\nexport { getUniqueID, openUrl, hasParents, renderRules, AstRenderer, parser, stringToTokens, tokensToAST, MarkdownIt, styles, removeTextStyleProps, FitImage, textStyleProps };\n\nvar getStyle = function getStyle(mergeStyle, style) {\n  var useStyles = {};\n\n  if (mergeStyle === true && style !== null) {\n    Object.keys(style).forEach(function (value) {\n      useStyles[value] = _objectSpread({}, StyleSheet.flatten(style[value]));\n    });\n    Object.keys(styles).forEach(function (value) {\n      useStyles[value] = _objectSpread(_objectSpread({}, styles[value]), StyleSheet.flatten(style[value]));\n    });\n  } else {\n    useStyles = _objectSpread({}, styles);\n\n    if (style !== null) {\n      Object.keys(style).forEach(function (value) {\n        useStyles[value] = _objectSpread({}, StyleSheet.flatten(style[value]));\n      });\n    }\n  }\n\n  Object.keys(useStyles).forEach(function (value) {\n    useStyles['_VIEW_SAFE_' + value] = removeTextStyleProps(useStyles[value]);\n  });\n  return StyleSheet.create(useStyles);\n};\n\nvar getRenderer = function getRenderer(renderer, rules, style, mergeStyle, onLinkPress, maxTopLevelChildren, topLevelMaxExceededItem, allowedImageHandlers, defaultImageHandler, debugPrintTree) {\n  if (renderer && rules) {\n    console.warn('react-native-markdown-display you are using renderer and rules at the same time. This is not possible, props.rules is ignored');\n  }\n\n  if (renderer && style) {\n    console.warn('react-native-markdown-display you are using renderer and style at the same time. This is not possible, props.style is ignored');\n  }\n\n  if (renderer) {\n    if (!(typeof renderer === 'function') || renderer instanceof AstRenderer) {\n      return renderer;\n    } else {\n      throw new Error('Provided renderer is not compatible with function or AstRenderer. please change');\n    }\n  } else {\n    var useStyles = getStyle(mergeStyle, style);\n    return new AstRenderer(_objectSpread(_objectSpread({}, renderRules), rules || {}), useStyles, onLinkPress, maxTopLevelChildren, topLevelMaxExceededItem, allowedImageHandlers, defaultImageHandler, debugPrintTree);\n  }\n};\n\nvar Markdown = React.memo(function (_ref) {\n  var children = _ref.children,\n      _ref$renderer = _ref.renderer,\n      renderer = _ref$renderer === void 0 ? null : _ref$renderer,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? null : _ref$rules,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? null : _ref$style,\n      _ref$mergeStyle = _ref.mergeStyle,\n      mergeStyle = _ref$mergeStyle === void 0 ? true : _ref$mergeStyle,\n      _ref$markdownit = _ref.markdownit,\n      markdownit = _ref$markdownit === void 0 ? MarkdownIt({\n    typographer: true\n  }) : _ref$markdownit,\n      onLinkPress = _ref.onLinkPress,\n      _ref$maxTopLevelChild = _ref.maxTopLevelChildren,\n      maxTopLevelChildren = _ref$maxTopLevelChild === void 0 ? null : _ref$maxTopLevelChild,\n      _ref$topLevelMaxExcee = _ref.topLevelMaxExceededItem,\n      topLevelMaxExceededItem = _ref$topLevelMaxExcee === void 0 ? React.createElement(Text, {\n    key: \"dotdotdot\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 31\n    }\n  }, \"...\") : _ref$topLevelMaxExcee,\n      _ref$allowedImageHand = _ref.allowedImageHandlers,\n      allowedImageHandlers = _ref$allowedImageHand === void 0 ? ['data:image/png;base64', 'data:image/gif;base64', 'data:image/jpeg;base64', 'https://', 'http://'] : _ref$allowedImageHand,\n      _ref$defaultImageHand = _ref.defaultImageHandler,\n      defaultImageHandler = _ref$defaultImageHand === void 0 ? 'https://' : _ref$defaultImageHand,\n      _ref$debugPrintTree = _ref.debugPrintTree,\n      debugPrintTree = _ref$debugPrintTree === void 0 ? false : _ref$debugPrintTree;\n  var momoizedRenderer = useMemo(function () {\n    return getRenderer(renderer, rules, style, mergeStyle, onLinkPress, maxTopLevelChildren, topLevelMaxExceededItem, allowedImageHandlers, defaultImageHandler, debugPrintTree);\n  }, [maxTopLevelChildren, onLinkPress, renderer, rules, style, mergeStyle, topLevelMaxExceededItem, allowedImageHandlers, defaultImageHandler, debugPrintTree]);\n  var momoizedParser = useMemo(function () {\n    return markdownit;\n  }, [markdownit]);\n  return parser(children, momoizedRenderer.render, momoizedParser);\n});\nMarkdown.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array]).isRequired,\n  renderer: PropTypes.oneOfType([PropTypes.func, PropTypes.instanceOf(AstRenderer)]),\n  onLinkPress: PropTypes.func,\n  maxTopLevelChildren: PropTypes.number,\n  topLevelMaxExceededItem: PropTypes.any,\n  rules: function rules(props, propName, componentName) {\n    var invalidProps = [];\n    var prop = props[propName];\n\n    if (!prop) {\n      return;\n    }\n\n    if (typeof prop === 'object') {\n      invalidProps = Object.keys(prop).filter(function (key) {\n        return typeof prop[key] !== 'function';\n      });\n    }\n\n    if (typeof prop !== 'object') {\n      return new Error(\"Invalid prop `\" + propName + \"` supplied to `\" + componentName + \"`. Must be of shape {[index:string]:function} \");\n    } else if (invalidProps.length > 0) {\n      return new Error(\"Invalid prop `\" + propName + \"` supplied to `\" + componentName + \"`. These \" + (\"props are not of type function `\" + invalidProps.join(', ') + \"` \"));\n    }\n  },\n  markdownit: PropTypes.instanceOf(MarkdownIt),\n  style: PropTypes.any,\n  mergeStyle: PropTypes.bool,\n  allowedImageHandlers: PropTypes.arrayOf(PropTypes.string),\n  defaultImageHandler: PropTypes.string,\n  debugPrintTree: PropTypes.bool\n};\nexport default Markdown;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-markdown-display/src/index.js"],"names":["React","useMemo","PropTypes","parser","getUniqueID","hasParents","openUrl","tokensToAST","renderRules","AstRenderer","MarkdownIt","removeTextStyleProps","styles","stringToTokens","FitImage","textStyleProps","getStyle","mergeStyle","style","useStyles","Object","keys","forEach","value","StyleSheet","flatten","create","getRenderer","renderer","rules","onLinkPress","maxTopLevelChildren","topLevelMaxExceededItem","allowedImageHandlers","defaultImageHandler","debugPrintTree","console","warn","Error","Markdown","memo","children","markdownit","typographer","momoizedRenderer","momoizedParser","render","propTypes","oneOfType","node","array","isRequired","func","instanceOf","number","any","props","propName","componentName","invalidProps","prop","filter","key","length","join","bool","arrayOf","string"],"mappings":"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","sourcesContent":["/**\n * Base Markdown component\n * @author Mient-jan Stelling + contributors\n */\n\nimport React, {useMemo} from 'react';\nimport {Text, StyleSheet} from 'react-native';\nimport PropTypes from 'prop-types';\nimport parser from './lib/parser';\nimport getUniqueID from './lib/util/getUniqueID';\nimport hasParents from './lib/util/hasParents';\nimport openUrl from './lib/util/openUrl';\nimport tokensToAST from './lib/util/tokensToAST';\nimport renderRules from './lib/renderRules';\nimport AstRenderer from './lib/AstRenderer';\nimport MarkdownIt from 'markdown-it';\nimport removeTextStyleProps from './lib/util/removeTextStyleProps';\nimport {styles} from './lib/styles';\nimport {stringToTokens} from './lib/util/stringToTokens';\nimport FitImage from 'react-native-fit-image';\nimport textStyleProps from './lib/data/textStyleProps';\n\nexport {\n  getUniqueID,\n  openUrl,\n  hasParents,\n  renderRules,\n  AstRenderer,\n  parser,\n  stringToTokens,\n  tokensToAST,\n  MarkdownIt,\n  styles,\n  removeTextStyleProps,\n  FitImage,\n  textStyleProps,\n};\n\n// we use StyleSheet.flatten here to make sure we have an object, in case someone\n// passes in a StyleSheet.create result to the style prop\nconst getStyle = (mergeStyle, style) => {\n  let useStyles = {};\n\n  if (mergeStyle === true && style !== null) {\n    // make sure we get anything user defuned\n    Object.keys(style).forEach((value) => {\n      useStyles[value] = {\n        ...StyleSheet.flatten(style[value]),\n      };\n    });\n\n    // combine any existing styles\n    Object.keys(styles).forEach((value) => {\n      useStyles[value] = {\n        ...styles[value],\n        ...StyleSheet.flatten(style[value]),\n      };\n    });\n  } else {\n    useStyles = {\n      ...styles,\n    };\n\n    if (style !== null) {\n      Object.keys(style).forEach((value) => {\n        useStyles[value] = {\n          ...StyleSheet.flatten(style[value]),\n        };\n      });\n    }\n  }\n\n  Object.keys(useStyles).forEach((value) => {\n    useStyles['_VIEW_SAFE_' + value] = removeTextStyleProps(useStyles[value]);\n  });\n\n  return StyleSheet.create(useStyles);\n};\n\nconst getRenderer = (\n  renderer,\n  rules,\n  style,\n  mergeStyle,\n  onLinkPress,\n  maxTopLevelChildren,\n  topLevelMaxExceededItem,\n  allowedImageHandlers,\n  defaultImageHandler,\n  debugPrintTree,\n) => {\n  if (renderer && rules) {\n    console.warn(\n      'react-native-markdown-display you are using renderer and rules at the same time. This is not possible, props.rules is ignored',\n    );\n  }\n\n  if (renderer && style) {\n    console.warn(\n      'react-native-markdown-display you are using renderer and style at the same time. This is not possible, props.style is ignored',\n    );\n  }\n\n  // these checks are here to prevent extra overhead.\n  if (renderer) {\n    if (!(typeof renderer === 'function') || renderer instanceof AstRenderer) {\n      return renderer;\n    } else {\n      throw new Error(\n        'Provided renderer is not compatible with function or AstRenderer. please change',\n      );\n    }\n  } else {\n    let useStyles = getStyle(mergeStyle, style);\n\n    return new AstRenderer(\n      {\n        ...renderRules,\n        ...(rules || {}),\n      },\n      useStyles,\n      onLinkPress,\n      maxTopLevelChildren,\n      topLevelMaxExceededItem,\n      allowedImageHandlers,\n      defaultImageHandler,\n      debugPrintTree,\n    );\n  }\n};\n\nconst Markdown = React.memo(\n  ({\n    children,\n    renderer = null,\n    rules = null,\n    style = null,\n    mergeStyle = true,\n    markdownit = MarkdownIt({\n      typographer: true,\n    }),\n    onLinkPress,\n    maxTopLevelChildren = null,\n    topLevelMaxExceededItem = <Text key=\"dotdotdot\">...</Text>,\n    allowedImageHandlers = [\n      'data:image/png;base64',\n      'data:image/gif;base64',\n      'data:image/jpeg;base64',\n      'https://',\n      'http://',\n    ],\n    defaultImageHandler = 'https://',\n    debugPrintTree = false,\n  }) => {\n    const momoizedRenderer = useMemo(\n      () =>\n        getRenderer(\n          renderer,\n          rules,\n          style,\n          mergeStyle,\n          onLinkPress,\n          maxTopLevelChildren,\n          topLevelMaxExceededItem,\n          allowedImageHandlers,\n          defaultImageHandler,\n          debugPrintTree,\n        ),\n      [\n        maxTopLevelChildren,\n        onLinkPress,\n        renderer,\n        rules,\n        style,\n        mergeStyle,\n        topLevelMaxExceededItem,\n        allowedImageHandlers,\n        defaultImageHandler,\n        debugPrintTree,\n      ],\n    );\n\n    const momoizedParser = useMemo(() => markdownit, [markdownit]);\n\n    return parser(children, momoizedRenderer.render, momoizedParser);\n  },\n);\n\nMarkdown.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array]).isRequired,\n  renderer: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.instanceOf(AstRenderer),\n  ]),\n  onLinkPress: PropTypes.func,\n  maxTopLevelChildren: PropTypes.number,\n  topLevelMaxExceededItem: PropTypes.any,\n  rules: (props, propName, componentName) => {\n    let invalidProps = [];\n    const prop = props[propName];\n\n    if (!prop) {\n      return;\n    }\n\n    if (typeof prop === 'object') {\n      invalidProps = Object.keys(prop).filter(\n        (key) => typeof prop[key] !== 'function',\n      );\n    }\n\n    if (typeof prop !== 'object') {\n      return new Error(\n        `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Must be of shape {[index:string]:function} `,\n      );\n    } else if (invalidProps.length > 0) {\n      return new Error(\n        `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. These ` +\n          `props are not of type function \\`${invalidProps.join(', ')}\\` `,\n      );\n    }\n  },\n  markdownit: PropTypes.instanceOf(MarkdownIt),\n  style: PropTypes.any,\n  mergeStyle: PropTypes.bool,\n  allowedImageHandlers: PropTypes.arrayOf(PropTypes.string),\n  defaultImageHandler: PropTypes.string,\n  debugPrintTree: PropTypes.bool,\n};\n\nexport default Markdown;\n"]},"metadata":{},"sourceType":"module"}