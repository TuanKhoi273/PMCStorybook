{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport textStyleProps from \"../data/textStyleProps\";\nexport default function removeTextStyleProps(style) {\n  var intersection = textStyleProps.filter(function (value) {\n    return Object.keys(style).includes(value);\n  });\n\n  var obj = _objectSpread({}, style);\n\n  intersection.forEach(function (value) {\n    delete obj[value];\n  });\n  return obj;\n}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-markdown-display/src/lib/util/removeTextStyleProps.js"],"names":["textStyleProps","removeTextStyleProps","style","intersection","filter","value","Object","keys","includes","obj","forEach"],"mappings":";;;;;;AAAA,OAAOA,cAAP;AAEA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,MAAMC,YAAY,GAAGH,cAAc,CAACI,MAAf,CAAsB,UAACC,KAAD;AAAA,WACzCC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,QAAnB,CAA4BH,KAA5B,CADyC;AAAA,GAAtB,CAArB;;AAIA,MAAMI,GAAG,qBAAOP,KAAP,CAAT;;AAEAC,EAAAA,YAAY,CAACO,OAAb,CAAqB,UAACL,KAAD,EAAW;AAC9B,WAAOI,GAAG,CAACJ,KAAD,CAAV;AACD,GAFD;AAIA,SAAOI,GAAP;AACD","sourcesContent":["import textStyleProps from '../data/textStyleProps';\n\nexport default function removeTextStyleProps(style) {\n  const intersection = textStyleProps.filter((value) =>\n    Object.keys(style).includes(value),\n  );\n\n  const obj = {...style};\n\n  intersection.forEach((value) => {\n    delete obj[value];\n  });\n\n  return obj;\n}\n"]},"metadata":{},"sourceType":"module"}