{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport cssToReactNative from 'css-to-react-native';\nexport default function convertAdditionalStyles(style) {\n  var rules = style.split(';');\n  var tuples = rules.map(function (rule) {\n    var _rule$split = rule.split(':'),\n        _rule$split2 = _slicedToArray(_rule$split, 2),\n        key = _rule$split2[0],\n        value = _rule$split2[1];\n\n    if (key && value) {\n      key = key.trim();\n      value = value.trim();\n      return [key, value];\n    } else {\n      return null;\n    }\n  }).filter(function (x) {\n    return x != null;\n  });\n  var conv = cssToReactNative(tuples);\n  return conv;\n}","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-markdown-display/src/lib/util/convertAdditionalStyles.js"],"names":["cssToReactNative","convertAdditionalStyles","style","rules","split","tuples","map","rule","key","value","trim","filter","x","conv"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,qBAA7B;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACrD,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,CAAd;AAEA,MAAMC,MAAM,GAAGF,KAAK,CACjBG,GADY,CACR,UAACC,IAAD,EAAU;AACb,sBAAmBA,IAAI,CAACH,KAAL,CAAW,GAAX,CAAnB;AAAA;AAAA,QAAKI,GAAL;AAAA,QAAUC,KAAV;;AAEA,QAAID,GAAG,IAAIC,KAAX,EAAkB;AAChBD,MAAAA,GAAG,GAAGA,GAAG,CAACE,IAAJ,EAAN;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR;AACA,aAAO,CAACF,GAAD,EAAMC,KAAN,CAAP;AACD,KAJD,MAIO;AACL,aAAO,IAAP;AACD;AACF,GAXY,EAYZE,MAZY,CAYL,UAACC,CAAD,EAAO;AACb,WAAOA,CAAC,IAAI,IAAZ;AACD,GAdY,CAAf;AAgBA,MAAMC,IAAI,GAAGb,gBAAgB,CAACK,MAAD,CAA7B;AAEA,SAAOQ,IAAP;AACD","sourcesContent":["import cssToReactNative from 'css-to-react-native';\n\nexport default function convertAdditionalStyles(style) {\n  const rules = style.split(';');\n\n  const tuples = rules\n    .map((rule) => {\n      let [key, value] = rule.split(':');\n\n      if (key && value) {\n        key = key.trim();\n        value = value.trim();\n        return [key, value];\n      } else {\n        return null;\n      }\n    })\n    .filter((x) => {\n      return x != null;\n    });\n\n  const conv = cssToReactNative(tuples);\n\n  return conv;\n}\n"]},"metadata":{},"sourceType":"module"}