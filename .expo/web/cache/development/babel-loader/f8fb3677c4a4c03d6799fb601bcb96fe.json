{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport getUniqueID from \"./util/getUniqueID\";\nimport convertAdditionalStyles from \"./util/convertAdditionalStyles\";\nimport textStyleProps from \"./data/textStyleProps\";\n\nvar AstRenderer = function AstRenderer(renderRules, style, onLinkPress, maxTopLevelChildren, topLevelMaxExceededItem, allowedImageHandlers, defaultImageHandler, debugPrintTree) {\n  var _this = this;\n\n  _classCallCheck(this, AstRenderer);\n\n  this.getRenderFunction = function (type) {\n    var renderFunction = _this._renderRules[type];\n\n    if (!renderFunction) {\n      console.warn(\"Warning, unknown render rule encountered: \" + type + \". 'unknown' render rule used (by default, returns null - nothing rendered)\");\n      return _this._renderRules.unknown;\n    }\n\n    return renderFunction;\n  };\n\n  this.renderNode = function (node, parentNodes) {\n    var isRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var renderFunction = _this.getRenderFunction(node.type);\n\n    var parents = _toConsumableArray(parentNodes);\n\n    if (_this._debugPrintTree === true) {\n      var str = '';\n\n      for (var a = 0; a < parents.length; a++) {\n        str = str + '-';\n      }\n\n      console.log(\"\" + str + node.type);\n    }\n\n    parents.unshift(node);\n    var children = node.children.map(function (value) {\n      return _this.renderNode(value, parents);\n    });\n\n    if (node.type === 'link' || node.type === 'blocklink') {\n      return renderFunction(node, children, parentNodes, _this._style, _this._onLinkPress);\n    }\n\n    if (node.type === 'image') {\n      return renderFunction(node, children, parentNodes, _this._style, _this._allowedImageHandlers, _this._defaultImageHandler);\n    }\n\n    if (children.length === 0 || node.type === 'list_item') {\n      var styleObj = {};\n\n      for (var _a = parentNodes.length - 1; _a > -1; _a--) {\n        var refStyle = {};\n\n        if (parentNodes[_a].attributes && parentNodes[_a].attributes.style && typeof parentNodes[_a].attributes.style === 'string') {\n          refStyle = convertAdditionalStyles(parentNodes[_a].attributes.style);\n        }\n\n        if (_this._style[parentNodes[_a].type]) {\n          refStyle = _objectSpread(_objectSpread({}, refStyle), StyleSheet.flatten(_this._style[parentNodes[_a].type]));\n\n          if (parentNodes[_a].type === 'list_item') {\n            var contentStyle = {};\n\n            if (parentNodes[_a + 1].type === 'bullet_list') {\n              contentStyle = _this._style.bullet_list_content;\n            } else if (parentNodes[_a + 1].type === 'ordered_list') {\n              contentStyle = _this._style.ordered_list_content;\n            }\n\n            refStyle = _objectSpread(_objectSpread({}, refStyle), StyleSheet.flatten(contentStyle));\n          }\n        }\n\n        var arr = Object.keys(refStyle);\n\n        for (var b = 0; b < arr.length; b++) {\n          if (textStyleProps.includes(arr[b])) {\n            styleObj[arr[b]] = refStyle[arr[b]];\n          }\n        }\n      }\n\n      return renderFunction(node, children, parentNodes, _this._style, styleObj);\n    }\n\n    if (isRoot === true && _this._maxTopLevelChildren && children.length > _this._maxTopLevelChildren) {\n      children = children.slice(0, _this._maxTopLevelChildren);\n      children.push(_this._topLevelMaxExceededItem);\n    }\n\n    return renderFunction(node, children, parentNodes, _this._style);\n  };\n\n  this.render = function (nodes) {\n    var root = {\n      type: 'body',\n      key: getUniqueID(),\n      children: nodes\n    };\n    return _this.renderNode(root, [], true);\n  };\n\n  this._renderRules = renderRules;\n  this._style = style;\n  this._onLinkPress = onLinkPress;\n  this._maxTopLevelChildren = maxTopLevelChildren;\n  this._topLevelMaxExceededItem = topLevelMaxExceededItem;\n  this._allowedImageHandlers = allowedImageHandlers;\n  this._defaultImageHandler = defaultImageHandler;\n  this._debugPrintTree = debugPrintTree;\n};\n\nexport { AstRenderer as default };","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-markdown-display/src/lib/AstRenderer.js"],"names":["getUniqueID","convertAdditionalStyles","textStyleProps","AstRenderer","renderRules","style","onLinkPress","maxTopLevelChildren","topLevelMaxExceededItem","allowedImageHandlers","defaultImageHandler","debugPrintTree","getRenderFunction","type","renderFunction","_renderRules","console","warn","unknown","renderNode","node","parentNodes","isRoot","parents","_debugPrintTree","str","a","length","log","unshift","children","map","value","_style","_onLinkPress","_allowedImageHandlers","_defaultImageHandler","styleObj","refStyle","attributes","StyleSheet","flatten","contentStyle","bullet_list_content","ordered_list_content","arr","Object","keys","b","includes","_maxTopLevelChildren","slice","push","_topLevelMaxExceededItem","render","nodes","root","key"],"mappings":";;;;;;;;;AAEA,OAAOA,WAAP;AACA,OAAOC,uBAAP;AAEA,OAAOC,cAAP;;IAEqBC,W,GAMnB,qBACEC,WADF,EAEEC,KAFF,EAGEC,WAHF,EAIEC,mBAJF,EAKEC,uBALF,EAMEC,oBANF,EAOEC,mBAPF,EAQEC,cARF,EASE;AAAA;;AAAA;;AAAA,OAgBFC,iBAhBE,GAgBkB,UAACC,IAAD,EAAU;AAC5B,QAAMC,cAAc,GAAG,KAAI,CAACC,YAAL,CAAkBF,IAAlB,CAAvB;;AAEA,QAAI,CAACC,cAAL,EAAqB;AACnBE,MAAAA,OAAO,CAACC,IAAR,gDAC+CJ,IAD/C;AAGA,aAAO,KAAI,CAACE,YAAL,CAAkBG,OAAzB;AACD;;AAED,WAAOJ,cAAP;AACD,GA3BC;;AAAA,OAmCFK,UAnCE,GAmCW,UAACC,IAAD,EAAOC,WAAP,EAAuC;AAAA,QAAnBC,MAAmB,uEAAV,KAAU;;AAClD,QAAMR,cAAc,GAAG,KAAI,CAACF,iBAAL,CAAuBQ,IAAI,CAACP,IAA5B,CAAvB;;AACA,QAAMU,OAAO,sBAAOF,WAAP,CAAb;;AAEA,QAAI,KAAI,CAACG,eAAL,KAAyB,IAA7B,EAAmC;AACjC,UAAIC,GAAG,GAAG,EAAV;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCD,QAAAA,GAAG,GAAGA,GAAG,GAAG,GAAZ;AACD;;AAEDT,MAAAA,OAAO,CAACY,GAAR,MAAeH,GAAf,GAAqBL,IAAI,CAACP,IAA1B;AACD;;AAEDU,IAAAA,OAAO,CAACM,OAAR,CAAgBT,IAAhB;AAGA,QAAIU,QAAQ,GAAGV,IAAI,CAACU,QAAL,CAAcC,GAAd,CAAkB,UAACC,KAAD,EAAW;AAC1C,aAAO,KAAI,CAACb,UAAL,CAAgBa,KAAhB,EAAuBT,OAAvB,CAAP;AACD,KAFc,CAAf;;AAMA,QAAIH,IAAI,CAACP,IAAL,KAAc,MAAd,IAAwBO,IAAI,CAACP,IAAL,KAAc,WAA1C,EAAuD;AACrD,aAAOC,cAAc,CACnBM,IADmB,EAEnBU,QAFmB,EAGnBT,WAHmB,EAInB,KAAI,CAACY,MAJc,EAKnB,KAAI,CAACC,YALc,CAArB;AAOD;;AAED,QAAId,IAAI,CAACP,IAAL,KAAc,OAAlB,EAA2B;AACzB,aAAOC,cAAc,CACnBM,IADmB,EAEnBU,QAFmB,EAGnBT,WAHmB,EAInB,KAAI,CAACY,MAJc,EAKnB,KAAI,CAACE,qBALc,EAMnB,KAAI,CAACC,oBANc,CAArB;AAQD;;AASD,QAAIN,QAAQ,CAACH,MAAT,KAAoB,CAApB,IAAyBP,IAAI,CAACP,IAAL,KAAc,WAA3C,EAAwD;AACtD,UAAMwB,QAAQ,GAAG,EAAjB;;AAEA,WAAK,IAAIX,EAAC,GAAGL,WAAW,CAACM,MAAZ,GAAqB,CAAlC,EAAqCD,EAAC,GAAG,CAAC,CAA1C,EAA6CA,EAAC,EAA9C,EAAkD;AAEhD,YAAIY,QAAQ,GAAG,EAAf;;AAEA,YACEjB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,IACAlB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAD1B,IAEA,OAAOgB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAAjC,KAA2C,QAH7C,EAIE;AACAiC,UAAAA,QAAQ,GAAGrC,uBAAuB,CAACoB,WAAW,CAACK,EAAD,CAAX,CAAea,UAAf,CAA0BlC,KAA3B,CAAlC;AACD;;AAGD,YAAI,KAAI,CAAC4B,MAAL,CAAYZ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAA3B,CAAJ,EAAsC;AACpCyB,UAAAA,QAAQ,mCACHA,QADG,GAEHE,UAAU,CAACC,OAAX,CAAmB,KAAI,CAACR,MAAL,CAAYZ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAA3B,CAAnB,CAFG,CAAR;;AAMA,cAAIQ,WAAW,CAACK,EAAD,CAAX,CAAeb,IAAf,KAAwB,WAA5B,EAAyC;AACvC,gBAAI6B,YAAY,GAAG,EAAnB;;AAEA,gBAAIrB,WAAW,CAACK,EAAC,GAAG,CAAL,CAAX,CAAmBb,IAAnB,KAA4B,aAAhC,EAA+C;AAC7C6B,cAAAA,YAAY,GAAG,KAAI,CAACT,MAAL,CAAYU,mBAA3B;AACD,aAFD,MAEO,IAAItB,WAAW,CAACK,EAAC,GAAG,CAAL,CAAX,CAAmBb,IAAnB,KAA4B,cAAhC,EAAgD;AACrD6B,cAAAA,YAAY,GAAG,KAAI,CAACT,MAAL,CAAYW,oBAA3B;AACD;;AAEDN,YAAAA,QAAQ,mCACHA,QADG,GAEHE,UAAU,CAACC,OAAX,CAAmBC,YAAnB,CAFG,CAAR;AAID;AACF;;AAGD,YAAMG,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYT,QAAZ,CAAZ;;AAEA,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,GAAG,CAAClB,MAAxB,EAAgCqB,CAAC,EAAjC,EAAqC;AACnC,cAAI9C,cAAc,CAAC+C,QAAf,CAAwBJ,GAAG,CAACG,CAAD,CAA3B,CAAJ,EAAqC;AACnCX,YAAAA,QAAQ,CAACQ,GAAG,CAACG,CAAD,CAAJ,CAAR,GAAmBV,QAAQ,CAACO,GAAG,CAACG,CAAD,CAAJ,CAA3B;AACD;AACF;AACF;;AAED,aAAOlC,cAAc,CAACM,IAAD,EAAOU,QAAP,EAAiBT,WAAjB,EAA8B,KAAI,CAACY,MAAnC,EAA2CI,QAA3C,CAArB;AACD;;AAID,QACEf,MAAM,KAAK,IAAX,IACA,KAAI,CAAC4B,oBADL,IAEApB,QAAQ,CAACH,MAAT,GAAkB,KAAI,CAACuB,oBAHzB,EAIE;AACApB,MAAAA,QAAQ,GAAGA,QAAQ,CAACqB,KAAT,CAAe,CAAf,EAAkB,KAAI,CAACD,oBAAvB,CAAX;AACApB,MAAAA,QAAQ,CAACsB,IAAT,CAAc,KAAI,CAACC,wBAAnB;AACD;;AAID,WAAOvC,cAAc,CAACM,IAAD,EAAOU,QAAP,EAAiBT,WAAjB,EAA8B,KAAI,CAACY,MAAnC,CAArB;AACD,GAxJC;;AAAA,OA+JFqB,MA/JE,GA+JO,UAACC,KAAD,EAAW;AAClB,QAAMC,IAAI,GAAG;AAAC3C,MAAAA,IAAI,EAAE,MAAP;AAAe4C,MAAAA,GAAG,EAAEzD,WAAW,EAA/B;AAAmC8B,MAAAA,QAAQ,EAAEyB;AAA7C,KAAb;AACA,WAAO,KAAI,CAACpC,UAAL,CAAgBqC,IAAhB,EAAsB,EAAtB,EAA0B,IAA1B,CAAP;AACD,GAlKC;;AACA,OAAKzC,YAAL,GAAoBX,WAApB;AACA,OAAK6B,MAAL,GAAc5B,KAAd;AACA,OAAK6B,YAAL,GAAoB5B,WAApB;AACA,OAAK4C,oBAAL,GAA4B3C,mBAA5B;AACA,OAAK8C,wBAAL,GAAgC7C,uBAAhC;AACA,OAAK2B,qBAAL,GAA6B1B,oBAA7B;AACA,OAAK2B,oBAAL,GAA4B1B,mBAA5B;AACA,OAAKc,eAAL,GAAuBb,cAAvB;AACD,C;;SAxBkBR,W","sourcesContent":["import {StyleSheet} from 'react-native';\n\nimport getUniqueID from './util/getUniqueID';\nimport convertAdditionalStyles from './util/convertAdditionalStyles';\n\nimport textStyleProps from './data/textStyleProps';\n\nexport default class AstRenderer {\n  /**\n   *\n   * @param {Object.<string, function>} renderRules\n   * @param {any} style\n   */\n  constructor(\n    renderRules,\n    style,\n    onLinkPress,\n    maxTopLevelChildren,\n    topLevelMaxExceededItem,\n    allowedImageHandlers,\n    defaultImageHandler,\n    debugPrintTree,\n  ) {\n    this._renderRules = renderRules;\n    this._style = style;\n    this._onLinkPress = onLinkPress;\n    this._maxTopLevelChildren = maxTopLevelChildren;\n    this._topLevelMaxExceededItem = topLevelMaxExceededItem;\n    this._allowedImageHandlers = allowedImageHandlers;\n    this._defaultImageHandler = defaultImageHandler;\n    this._debugPrintTree = debugPrintTree;\n  }\n\n  /**\n   *\n   * @param {string} type\n   * @return {string}\n   */\n  getRenderFunction = (type) => {\n    const renderFunction = this._renderRules[type];\n\n    if (!renderFunction) {\n      console.warn(\n        `Warning, unknown render rule encountered: ${type}. 'unknown' render rule used (by default, returns null - nothing rendered)`,\n      );\n      return this._renderRules.unknown;\n    }\n\n    return renderFunction;\n  };\n\n  /**\n   *\n   * @param node\n   * @param parentNodes\n   * @return {*}\n   */\n  renderNode = (node, parentNodes, isRoot = false) => {\n    const renderFunction = this.getRenderFunction(node.type);\n    const parents = [...parentNodes];\n\n    if (this._debugPrintTree === true) {\n      let str = '';\n\n      for (let a = 0; a < parents.length; a++) {\n        str = str + '-';\n      }\n\n      console.log(`${str}${node.type}`);\n    }\n\n    parents.unshift(node);\n\n    // calculate the children first\n    let children = node.children.map((value) => {\n      return this.renderNode(value, parents);\n    });\n\n    // render any special types of nodes that have different renderRule function signatures\n\n    if (node.type === 'link' || node.type === 'blocklink') {\n      return renderFunction(\n        node,\n        children,\n        parentNodes,\n        this._style,\n        this._onLinkPress,\n      );\n    }\n\n    if (node.type === 'image') {\n      return renderFunction(\n        node,\n        children,\n        parentNodes,\n        this._style,\n        this._allowedImageHandlers,\n        this._defaultImageHandler,\n      );\n    }\n\n    // We are at the bottom of some tree - grab all the parent styles\n    // this effectively grabs the styles from parents and\n    // applies them in order of priority parent (least) to child (most)\n    // to allow styling global, then lower down things individually\n\n    // we have to handle list_item seperately here because they have some child\n    // pseudo classes that need the additional style props from parents passed down to them\n    if (children.length === 0 || node.type === 'list_item') {\n      const styleObj = {};\n\n      for (let a = parentNodes.length - 1; a > -1; a--) {\n        // grab and additional attributes specified by markdown-it\n        let refStyle = {};\n\n        if (\n          parentNodes[a].attributes &&\n          parentNodes[a].attributes.style &&\n          typeof parentNodes[a].attributes.style === 'string'\n        ) {\n          refStyle = convertAdditionalStyles(parentNodes[a].attributes.style);\n        }\n\n        // combine in specific styles for the object\n        if (this._style[parentNodes[a].type]) {\n          refStyle = {\n            ...refStyle,\n            ...StyleSheet.flatten(this._style[parentNodes[a].type]),\n          };\n\n          // workaround for list_items and their content cascading down the tree\n          if (parentNodes[a].type === 'list_item') {\n            let contentStyle = {};\n\n            if (parentNodes[a + 1].type === 'bullet_list') {\n              contentStyle = this._style.bullet_list_content;\n            } else if (parentNodes[a + 1].type === 'ordered_list') {\n              contentStyle = this._style.ordered_list_content;\n            }\n\n            refStyle = {\n              ...refStyle,\n              ...StyleSheet.flatten(contentStyle),\n            };\n          }\n        }\n\n        // then work out if any of them are text styles that should be used in the end.\n        const arr = Object.keys(refStyle);\n\n        for (let b = 0; b < arr.length; b++) {\n          if (textStyleProps.includes(arr[b])) {\n            styleObj[arr[b]] = refStyle[arr[b]];\n          }\n        }\n      }\n\n      return renderFunction(node, children, parentNodes, this._style, styleObj);\n    }\n\n    // cull top level children\n\n    if (\n      isRoot === true &&\n      this._maxTopLevelChildren &&\n      children.length > this._maxTopLevelChildren\n    ) {\n      children = children.slice(0, this._maxTopLevelChildren);\n      children.push(this._topLevelMaxExceededItem);\n    }\n\n    // render anythign else that has a normal signature\n\n    return renderFunction(node, children, parentNodes, this._style);\n  };\n\n  /**\n   *\n   * @param nodes\n   * @return {*}\n   */\n  render = (nodes) => {\n    const root = {type: 'body', key: getUniqueID(), children: nodes};\n    return this.renderNode(root, [], true);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}