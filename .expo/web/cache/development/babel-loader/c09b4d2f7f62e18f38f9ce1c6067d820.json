{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/5-FloatButton.stories.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport FloatButton from \"./FloatButton\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport { ButtonState, ButtonType } from \"../../component\";\nvar FloatButtonStories = storiesOf(\"FloatButton\", module);\nFloatButtonStories.addDecorator(withKnobs);\nFloatButtonStories.add(\"Import and Props\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"# Import\"), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"\\n        import { FloatButton } from 'pharmacity-component-kits'\\n        \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"# Props\"), React.createElement(View, {\n      style: styles.table,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, generateRow(true, \"Name\", \"Type\", \"Default\"), generateRow(false, \"size\", \"Double\", \"48.0\"), generateRow(false, \"rounded\", \"boolean\", \"false\"), generateRow(false, \"iconColor\", \"String\", \"black\"), generateRow(false, \"onPress\", \"Function\", \"null\"), generateRow(false, \"customStyle\", \"Object\", \"{}\"), generateRow(false, \"iconName\", \"String\", \"chevron-left\"), generateRow(false, \"customIcon\", \"Component\", \"null\")), React.createElement(View, {\n      style: [styles.table, {\n        marginTop: 16,\n        marginBottom: 56\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, generateExplainRow(true, \"Name\", \"Explain\"), generateExplainRow(false, \"size\", \"Size of FloatButton\"), generateExplainRow(false, \"rounded\", \"if you want FloatButton type Round, You can set it True\"), generateExplainRow(false, \"iconColor\", \"Color of icon\"), generateExplainRow(false, \"onPress\", \"Function when click FloatButton\"), generateExplainRow(false, \"customStyle\", \"You can custom FloatButton with it\"), generateExplainRow(false, \"iconName\", \"You can custom icon name with it, find icon name in https://feathericons.com\"), generateExplainRow(false, \"customIcon\", \"If U don't want use Feather Icon, You can custom icon component of button with it.\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  });\n}).add(\"Example\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"# Float Button Default\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, React.createElement(FloatButton, {\n      rounded: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), React.createElement(FloatButton, {\n      customStyle: {\n        marginHorizontal: 8\n      },\n      size: 60,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"# Float Button Round\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        marginBottom: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, React.createElement(FloatButton, {\n      rounded: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), React.createElement(FloatButton, {\n      rounded: true,\n      customStyle: {\n        marginHorizontal: 8\n      },\n      size: 60,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"\\n            <FloatButton\\n            rounded={true}\\n            customStyle={{ marginHorizontal: 8 }}\\n            size={60}\\n          />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"# FloatButton Custom Icon name\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, React.createElement(FloatButton, {\n      iconName: \"activity\",\n      rounded: true,\n      customStyle: {\n        margin: 8\n      },\n      size: 60,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    })), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, \"\\n            <FloatButton\\n            iconName={\\\"activity\\\"}\\n            rounded={true}\\n            customStyle={{ marginHorizontal: 8 }}\\n            size={60}\\n          />\\n              \"), React.createElement(FontText.Heading3, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.SEMATIC.green\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, \"Icon name I use react-native-vector-icons/Feather you can get in link: #https://feathericons.com, and change with props iconName . If don't have icon You need you get custom with customIcon props\"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, \"# FloatButton custom Icon\"), React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, React.createElement(FloatButton, {\n      rounded: true,\n      customStyle: {\n        marginHorizontal: 8,\n        marginBottom: 16\n      },\n      size: 60,\n      customIcon: React.createElement(FontText.Body1, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, \">\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    })), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"\\n            <FloatButton\\n            rounded={true}\\n            customStyle={{ margin: 8 }}\\n            size={60}\\n            customIcon={<FontText.Body1>{\\\">\\\"}</FontText.Body1>}\\n          />\\n              \"), React.createElement(View, {\n      style: {\n        height: 56\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  });\n});","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/5-FloatButton.stories.js"],"names":["React","storiesOf","FloatButton","action","boolean","withKnobs","Markdown","StoryContainer","FontText","ColorApp","styles","generateRow","generateExplainRow","ButtonState","ButtonType","FloatButtonStories","module","addDecorator","add","marginVertical","color","PRIMARY","blue_05","table","marginTop","marginBottom","flexDirection","marginHorizontal","margin","SEMATIC","green","height"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,OAAOC,WAAP;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,wBAAnC;AAEA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,EAAmBC,QAAnB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,kBAA9B;AAEA,SAASC,WAAT,EAAsBC,UAAtB;AAEA,IAAMC,kBAAkB,GAAGd,SAAS,CAAC,aAAD,EAAgBe,MAAhB,CAApC;AAGAD,kBAAkB,CAACE,YAAnB,CAAgCZ,SAAhC;AAIAU,kBAAkB,CAACG,GAAnB,CAAuB,kBAAvB,EAA2C;AAAA,SACzC,oBAAC,cAAD;AACE,IAAA,KAAK,EACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFANF,EASE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAEH,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAcE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACa,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,WAAW,CAAC,IAAD,EAAO,MAAP,EAAe,MAAf,EAAuB,SAAvB,CADd,EAEGA,WAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,MAA1B,CAFd,EAGGA,WAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB,EAA8B,OAA9B,CAHd,EAIGA,WAAW,CAAC,KAAD,EAAQ,WAAR,EAAqB,QAArB,EAA+B,OAA/B,CAJd,EAKGA,WAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,UAAnB,EAA+B,MAA/B,CALd,EAMGA,WAAW,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC,IAAjC,CANd,EAOGA,WAAW,CAAC,KAAD,EAAQ,UAAR,EAAoB,QAApB,EAA8B,cAA9B,CAPd,EAQGA,WAAW,CAAC,KAAD,EAAQ,YAAR,EAAsB,WAAtB,EAAmC,MAAnC,CARd,CAdF,EAyBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAACD,MAAM,CAACa,KAAR,EAAe;AAAEC,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OAAf,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,kBAAkB,CAAC,IAAD,EAAO,MAAP,EAAe,SAAf,CADrB,EAEGA,kBAAkB,CAAC,KAAD,EAAQ,MAAR,EAAgB,qBAAhB,CAFrB,EAGGA,kBAAkB,CACjB,KADiB,EAEjB,SAFiB,EAGjB,yDAHiB,CAHrB,EAQGA,kBAAkB,CAAC,KAAD,EAAQ,WAAR,EAAqB,eAArB,CARrB,EASGA,kBAAkB,CACjB,KADiB,EAEjB,SAFiB,EAGjB,iCAHiB,CATrB,EAcGA,kBAAkB,CACjB,KADiB,EAEjB,aAFiB,EAGjB,oCAHiB,CAdrB,EAmBGA,kBAAkB,CACjB,KADiB,EAEjB,UAFiB,EAGjB,8EAHiB,CAnBrB,EAwBGA,kBAAkB,CACjB,KADiB,EAEjB,YAFiB,EAGjB,oFAHiB,CAxBrB,CAzBF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADyC;AAAA,CAA3C,EA6DGM,GA7DH,CA6DO,SA7DP,EA6DkB;AAAA,SAChB,oBAAC,cAAD;AACE,IAAA,KAAK,EACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAME,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAE;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAA1B;AAAmD,MAAA,IAAI,EAAE,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAER,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF,EAgBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,aAAa,EAAE,KAAjB;AAAwBD,QAAAA,YAAY,EAAE;AAAtC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,IADX;AAEE,MAAA,WAAW,EAAE;AAAEE,QAAAA,gBAAgB,EAAE;AAApB,OAFf;AAGE,MAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,EAyBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAzBF,EAgCE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAER,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAhCF,EAqCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE,UADZ;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,WAAW,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAHf;AAIE,MAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArCF,EA8CE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6MA9CF,EAsDE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAET,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACoB,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6MAtDF,EA6DE,oBAAC,QAAD,CAAU,QAAV;AACE,MAAA,KAAK,EAAE;AAAEX,QAAAA,cAAc,EAAE,EAAlB;AAAsBC,QAAAA,KAAK,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AAA9C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCA7DF,EAkEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,IADX;AAEE,MAAA,WAAW,EAAE;AAAEC,QAAAA,gBAAgB,EAAE,CAApB;AAAuBF,QAAAA,YAAY,EAAE;AAArC,OAFf;AAGE,MAAA,IAAI,EAAE,EAHR;AAIE,MAAA,UAAU,EAAE,oBAAC,QAAD,CAAU,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,GAAjB,CAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlEF,EA2EE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOA3EF,EAoFE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApFF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB;AAAA,CA7DlB","sourcesContent":["import React from \"react\";\nimport { View, Text } from \"react-native\";\nimport { storiesOf } from \"@storybook/react-native\";\n\nimport FloatButton from \"./FloatButton\";\nimport { action } from \"@storybook/addon-actions\";\nimport { boolean, withKnobs } from \"@storybook/addon-knobs\";\n\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\n\nconst FloatButtonStories = storiesOf(\"FloatButton\", module);\n\n// lets storybook know to show the knobs addon for this story\nFloatButtonStories.addDecorator(withKnobs);\n\n// I use to boolean knob to set the disabled prop based on the knob state\n// I use the action function to log every time the button gets called\nFloatButtonStories.add(\"Import and Props\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Import\n        </FontText.Heading2>\n        <Markdown>{`\n        import { FloatButton } from 'pharmacity-component-kits'\n        `}</Markdown>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Props\n        </FontText.Heading2>\n        <View style={styles.table}>\n          {generateRow(true, \"Name\", \"Type\", \"Default\")}\n          {generateRow(false, \"size\", \"Double\", \"48.0\")}\n          {generateRow(false, \"rounded\", \"boolean\", \"false\")}\n          {generateRow(false, \"iconColor\", \"String\", \"black\")}\n          {generateRow(false, \"onPress\", \"Function\", \"null\")}\n          {generateRow(false, \"customStyle\", \"Object\", \"{}\")}\n          {generateRow(false, \"iconName\", \"String\", \"chevron-left\")}\n          {generateRow(false, \"customIcon\", \"Component\", \"null\")}\n        </View>\n\n        <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n          {generateExplainRow(true, \"Name\", \"Explain\")}\n          {generateExplainRow(false, \"size\", \"Size of FloatButton\")}\n          {generateExplainRow(\n            false,\n            \"rounded\",\n            \"if you want FloatButton type Round, You can set it True\"\n          )}\n          {generateExplainRow(false, \"iconColor\", \"Color of icon\")}\n          {generateExplainRow(\n            false,\n            \"onPress\",\n            \"Function when click FloatButton\"\n          )}\n          {generateExplainRow(\n            false,\n            \"customStyle\",\n            \"You can custom FloatButton with it\"\n          )}\n          {generateExplainRow(\n            false,\n            \"iconName\",\n            \"You can custom icon name with it, find icon name in https://feathericons.com\"\n          )}\n          {generateExplainRow(\n            false,\n            \"customIcon\",\n            \"If U don't want use Feather Icon, You can custom icon component of button with it.\"\n          )}\n        </View>\n      </View>\n    }\n  />\n)).add(\"Example\", () => (\n  <StoryContainer\n    child={\n      <View>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Float Button Default\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton rounded={false} />\n          <FloatButton customStyle={{ marginHorizontal: 8 }} size={60} />\n        </View>\n\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # Float Button Round\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\", marginBottom: 16 }}>\n          <FloatButton rounded={true} />\n          <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n              `}</Markdown>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # FloatButton Custom Icon name\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton\n            iconName={\"activity\"}\n            rounded={true}\n            customStyle={{ margin: 8 }}\n            size={60}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            iconName={\"activity\"}\n            rounded={true}\n            customStyle={{ marginHorizontal: 8 }}\n            size={60}\n          />\n              `}</Markdown>\n        <FontText.Heading3\n          style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n        >\n          Icon name I use react-native-vector-icons/Feather you can get in link:\n          #https://feathericons.com, and change with props iconName . If don't\n          have icon You need you get custom with customIcon props\n        </FontText.Heading3>\n        <FontText.Heading2\n          style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n        >\n          # FloatButton custom Icon\n        </FontText.Heading2>\n        <View style={{ flexDirection: \"row\" }}>\n          <FloatButton\n            rounded={true}\n            customStyle={{ marginHorizontal: 8, marginBottom: 16 }}\n            size={60}\n            customIcon={<FontText.Body1>{\">\"}</FontText.Body1>}\n          />\n        </View>\n\n        <Markdown>{`\n            <FloatButton\n            rounded={true}\n            customStyle={{ margin: 8 }}\n            size={60}\n            customIcon={<FontText.Body1>{\">\"}</FontText.Body1>}\n          />\n              `}</Markdown>\n\n        <View style={{ height: 56 }} />\n      </View>\n    }\n  />\n));\n"]},"metadata":{},"sourceType":"module"}