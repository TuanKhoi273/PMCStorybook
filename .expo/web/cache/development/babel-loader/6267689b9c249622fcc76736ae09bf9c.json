{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/4-Button.stories.js\";\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Button from \"./Button\";\nimport { ButtonState, ButtonType } from \"../../component\";\nvar buttonStories = storiesOf(\"Button\", module);\nbuttonStories.add(\"Import and Props\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, \"# Import\"), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"\\n            import { Button, ButtonType,ButtonState } from 'pharmacity-component-kits'\\n            \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, \"# Props\"), React.createElement(View, {\n      style: styles.table,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, generateRow(true, \"Name\", \"Type\", \"Default\"), generateRow(false, \"customStyle\", \"Object\", \"Null\"), generateRow(false, \"customTextStyle\", \"Object\", \"null\"), generateRow(false, \"name\", \"String\", \"''\"), generateRow(false, \"onPress\", \"Function\", \"null\"), generateRow(false, \"type\", \"ButtonType\", \"ButtonType.DEFAULT\"), generateRow(false, \"state\", \"ButtonState\", \"ButtonState.DEFAULT\"), generateRow(false, \"iconColor\", \"String\", \"black\"), generateRow(false, \"enableButtonLeft\", \"boolean\", \"false\"), generateRow(false, \"enableButtonRight\", \"boolean\", \"false\"), generateRow(false, \"customLeftComponent\", \"Component\", \"null\"), generateRow(false, \"customRightComponent\", \"Component\", \"null\"), generateRow(false, \"leftIconName\", \"String\", \"chevron-left\"), generateRow(false, \"rightIconName\", \"String\", \"chevron-right\")), React.createElement(View, {\n      style: [styles.table, {\n        marginTop: 16,\n        marginBottom: 56\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, generateExplainRow(true, \"Name\", \"Explain\"), generateExplainRow(false, \"customStyle\", \"Style custom for button\"), generateExplainRow(false, \"customTextStyle\", \"Style custom for text button\"), generateExplainRow(false, \"name\", \"Text name of button\"), generateExplainRow(false, \"onPress\", \"Function when click button\"), generateExplainRow(false, \"type\", \"Button type :{  DEFAULT,GHOST}\"), generateExplainRow(false, \"state\", \"Button state {DEFAULT,ACTIVE,DISABLE}\"), generateExplainRow(false, \"iconColor\", \"Color of all in button\"), generateExplainRow(false, \"enableButtonLeft\", \"On off Icon left, default off\"), generateExplainRow(false, \"enableButtonRight\", \"On off Icon right, default off\"), generateExplainRow(false, \"customLeftComponent\", \"If U don't want use Feather Icon , You can custom left component of button with it.\"), generateExplainRow(false, \"customRightComponent\", \"If U don't want use Feather Icon, You can custom right component of button with it.\"), generateExplainRow(false, \"leftIconName\", \"You can custom left icon name with it, find icon name in https://feathericons.com\"), generateExplainRow(false, \"rightIconName\", \"You can custom right icon name with it, find icon name in https://feathericons.com\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  });\n}).add(\"Example\", function () {\n  return React.createElement(StoryContainer, {\n    child: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"# Button Default with Name\"), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"1. Button default type Default\"), React.createElement(Button, {\n      name: \"DEFAULT NORMAL\",\n      iconColor: \"white\",\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"2. Button default type Active\"), React.createElement(Button, {\n      name: \"DEFAULT ACTIVE\",\n      state: ButtonState.ACTIVE,\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"3. Button default type Disable\"), React.createElement(Button, {\n      name: \" DEFAULT DISABLE\",\n      state: ButtonState.DISABLE,\n      customStyle: {\n        marginBottom: 16\n      },\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"\\n              <Button\\n              name=\\\" DEFAULT DISABLE\\\"\\n              state={ButtonState.DISABLE}\\n              onPress={() => {\\n                alert(\\\"abc\\\");\\n              }}\\n            />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, \"# Button Ghost\"), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, \"1. Button ghost type Default\"), React.createElement(Button, {\n      name: \"GHOST NORMAL\",\n      iconColor: \"white\",\n      type: ButtonType.GHOST,\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \"2. Button ghost type Active\"), React.createElement(Button, {\n      name: \"GHOST ACTIVE\",\n      state: ButtonState.ACTIVE,\n      type: ButtonType.GHOST,\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }), React.createElement(FontText.Heading5, {\n      style: {\n        marginVertical: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"3. Button ghost type Disable\"), React.createElement(Button, {\n      name: \" GHOST DISABLE\",\n      state: ButtonState.DISABLE,\n      type: ButtonType.GHOST,\n      customStyle: {\n        marginBottom: 16\n      },\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, \"\\n              <Button\\n              name=\\\" DEFAULT DISABLE\\\"\\n              state={ButtonState.DISABLE}\\n              type={ButtonType.GHOST}\\n              onPress={() => {\\n                alert(\\\"abc\\\");\\n              }}\\n            />\\n              \"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, \"# Button with left and right icon\"), React.createElement(Button, {\n      name: \"DEFAULT NORMAL\",\n      iconColor: \"white\",\n      enableButtonLeft: true,\n      enableButtonRight: true,\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      customStyle: {\n        marginBottom: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, \"\\n             <Button\\n             name=\\\"DEFAULT NORMAL\\\"\\n             iconColor={\\\"white\\\"}\\n             enableButtonLeft={true}\\n             enableButtonRight={true}\\n             onPress={() => {\\n               alert(\\\"abc\\\");\\n             }}\\n           />\\n              \"), React.createElement(FontText.Heading3, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.SEMATIC.green\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, \"Icon name I use react-native-vector-icons/Feather you can get in link: #https://feathericons.com, and change with props leftIconName and rightIconName . If don't have icon You need you get custom with customRightComponent and customLeftComponent props\"), React.createElement(FontText.Heading2, {\n      style: {\n        marginVertical: 12,\n        color: ColorApp.PRIMARY.blue_05\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, \"# Button custom leftIconName props\"), React.createElement(Button, {\n      name: \"DEFAULT NORMAL\",\n      iconColor: \"white\",\n      enableButtonLeft: true,\n      leftIconName: \"activity\",\n      enableButtonRight: false,\n      onPress: function onPress() {\n        alert(\"abc\");\n      },\n      customStyle: {\n        marginBottom: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }\n    }), React.createElement(Markdown, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, \"\\n             <Button\\n             name=\\\"DEFAULT NORMAL\\\"\\n             iconColor={\\\"white\\\"}\\n             enableButtonLeft={true}\\n             leftIconName={\\\"activity\\\"}\\n             enableButtonRight={false}\\n             onPress={() => {\\n               alert(\\\"abc\\\");\\n             }}\\n             customStyle={{ marginBottom: 16 }}\\n           />\\n              \"), React.createElement(View, {\n      style: {\n        height: 56\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/src/component/Common/4-Button.stories.js"],"names":["React","storiesOf","Markdown","StoryContainer","FontText","ColorApp","styles","generateRow","generateExplainRow","Button","ButtonState","ButtonType","buttonStories","module","add","marginVertical","color","PRIMARY","blue_05","table","marginTop","marginBottom","alert","ACTIVE","DISABLE","GHOST","SEMATIC","green","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { storiesOf } from \"@storybook/react-native\";\nimport Markdown from \"react-native-markdown-display\";\nimport StoryContainer from \"./StoryContainer\";\nimport { FontText, ColorApp } from \"../../component\";\nimport { View } from \"react-native\";\nimport { styles, generateRow, generateExplainRow } from \"./styleCommon\";\nimport Button from \"./Button\";\n\nimport { ButtonState, ButtonType } from \"../../component\";\nconst buttonStories = storiesOf(\"Button\", module);\n\nbuttonStories\n  .add(\"Import and Props\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Import\n          </FontText.Heading2>\n          <Markdown>{`\n            import { Button, ButtonType,ButtonState } from 'pharmacity-component-kits'\n            `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Props\n          </FontText.Heading2>\n          <View style={styles.table}>\n            {generateRow(true, \"Name\", \"Type\", \"Default\")}\n            {generateRow(false, \"customStyle\", \"Object\", \"Null\")}\n            {generateRow(false, \"customTextStyle\", \"Object\", \"null\")}\n            {generateRow(false, \"name\", \"String\", \"''\")}\n            {generateRow(false, \"onPress\", \"Function\", \"null\")}\n            {generateRow(false, \"type\", \"ButtonType\", \"ButtonType.DEFAULT\")}\n            {generateRow(false, \"state\", \"ButtonState\", \"ButtonState.DEFAULT\")}\n            {generateRow(false, \"iconColor\", \"String\", \"black\")}\n            {generateRow(false, \"enableButtonLeft\", \"boolean\", \"false\")}\n            {generateRow(false, \"enableButtonRight\", \"boolean\", \"false\")}\n            {generateRow(false, \"customLeftComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"customRightComponent\", \"Component\", \"null\")}\n            {generateRow(false, \"leftIconName\", \"String\", \"chevron-left\")}\n            {generateRow(false, \"rightIconName\", \"String\", \"chevron-right\")}\n          </View>\n\n          <View style={[styles.table, { marginTop: 16, marginBottom: 56 }]}>\n            {generateExplainRow(true, \"Name\", \"Explain\")}\n            {generateExplainRow(\n              false,\n              \"customStyle\",\n              \"Style custom for button\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customTextStyle\",\n              \"Style custom for text button\"\n            )}\n            {generateExplainRow(false, \"name\", \"Text name of button\")}\n            {generateExplainRow(false, \"onPress\", \"Function when click button\")}\n            {generateExplainRow(\n              false,\n              \"type\",\n              \"Button type :{  DEFAULT,GHOST}\"\n            )}\n            {generateExplainRow(\n              false,\n              \"state\",\n              \"Button state {DEFAULT,ACTIVE,DISABLE}\"\n            )}\n            {generateExplainRow(false, \"iconColor\", \"Color of all in button\")}\n            {generateExplainRow(\n              false,\n              \"enableButtonLeft\",\n              \"On off Icon left, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"enableButtonRight\",\n              \"On off Icon right, default off\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customLeftComponent\",\n              \"If U don't want use Feather Icon , You can custom left component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"customRightComponent\",\n              \"If U don't want use Feather Icon, You can custom right component of button with it.\"\n            )}\n            {generateExplainRow(\n              false,\n              \"leftIconName\",\n              \"You can custom left icon name with it, find icon name in https://feathericons.com\"\n            )}\n            {generateExplainRow(\n              false,\n              \"rightIconName\",\n              \"You can custom right icon name with it, find icon name in https://feathericons.com\"\n            )}\n          </View>\n        </View>\n      }\n    />\n  ))\n  .add(\"Example\", () => (\n    <StoryContainer\n      child={\n        <View>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button Default with Name\n          </FontText.Heading2>\n\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            1. Button default type Default\n          </FontText.Heading5>\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            // enableButtonLeft={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            2. Button default type Active\n          </FontText.Heading5>\n          <Button\n            name=\"DEFAULT ACTIVE\"\n            state={ButtonState.ACTIVE}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            3. Button default type Disable\n          </FontText.Heading5>\n          <Button\n            name=\" DEFAULT DISABLE\"\n            state={ButtonState.DISABLE}\n            customStyle={{ marginBottom: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Markdown>{`\n              <Button\n              name=\" DEFAULT DISABLE\"\n              state={ButtonState.DISABLE}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n              `}</Markdown>\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button Ghost\n          </FontText.Heading2>\n\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            1. Button ghost type Default\n          </FontText.Heading5>\n          <Button\n            name=\"GHOST NORMAL\"\n            iconColor={\"white\"}\n            // enableButtonLeft={true}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            2. Button ghost type Active\n          </FontText.Heading5>\n          <Button\n            name=\"GHOST ACTIVE\"\n            state={ButtonState.ACTIVE}\n            type={ButtonType.GHOST}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <FontText.Heading5 style={{ marginVertical: 12 }}>\n            3. Button ghost type Disable\n          </FontText.Heading5>\n          <Button\n            name=\" GHOST DISABLE\"\n            state={ButtonState.DISABLE}\n            type={ButtonType.GHOST}\n            customStyle={{ marginBottom: 16 }}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n          />\n          <Markdown>{`\n              <Button\n              name=\" DEFAULT DISABLE\"\n              state={ButtonState.DISABLE}\n              type={ButtonType.GHOST}\n              onPress={() => {\n                alert(\"abc\");\n              }}\n            />\n              `}</Markdown>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button with left and right icon\n          </FontText.Heading2>\n\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            enableButtonRight={true}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customStyle={{ marginBottom: 16 }}\n          />\n\n          <Markdown>{`\n             <Button\n             name=\"DEFAULT NORMAL\"\n             iconColor={\"white\"}\n             enableButtonLeft={true}\n             enableButtonRight={true}\n             onPress={() => {\n               alert(\"abc\");\n             }}\n           />\n              `}</Markdown>\n\n          <FontText.Heading3\n            style={{ marginVertical: 12, color: ColorApp.SEMATIC.green }}\n          >\n            Icon name I use react-native-vector-icons/Feather you can get in\n            link: #https://feathericons.com, and change with props leftIconName\n            and rightIconName . If don't have icon You need you get custom with\n            customRightComponent and customLeftComponent props\n          </FontText.Heading3>\n\n          <FontText.Heading2\n            style={{ marginVertical: 12, color: ColorApp.PRIMARY.blue_05 }}\n          >\n            # Button custom leftIconName props\n          </FontText.Heading2>\n\n          <Button\n            name=\"DEFAULT NORMAL\"\n            iconColor={\"white\"}\n            enableButtonLeft={true}\n            leftIconName={\"activity\"}\n            enableButtonRight={false}\n            onPress={() => {\n              alert(\"abc\");\n            }}\n            customStyle={{ marginBottom: 16 }}\n          />\n\n          <Markdown>{`\n             <Button\n             name=\"DEFAULT NORMAL\"\n             iconColor={\"white\"}\n             enableButtonLeft={true}\n             leftIconName={\"activity\"}\n             enableButtonRight={false}\n             onPress={() => {\n               alert(\"abc\");\n             }}\n             customStyle={{ marginBottom: 16 }}\n           />\n              `}</Markdown>\n\n          <View style={{ height: 56 }} />\n        </View>\n      }\n    />\n  ));\n"]},"metadata":{},"sourceType":"module"}