{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-modal-selector/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport styles from \"./style\";\nvar componentIndex = 0;\nvar propTypes = {\n  data: PropTypes.array,\n  onChange: PropTypes.func,\n  onModalOpen: PropTypes.func,\n  onModalClose: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  labelExtractor: PropTypes.func,\n  visible: PropTypes.bool,\n  closeOnChange: PropTypes.bool,\n  initValue: PropTypes.string,\n  listType: PropTypes.oneOf(['SCROLLVIEW', 'FLATLIST']),\n  animationType: PropTypes.oneOf(['none', 'slide', 'fade']),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  selectStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  selectTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  optionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  optionTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  optionContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  childrenContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  touchableStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  touchableActiveOpacity: PropTypes.number,\n  sectionTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  selectedItemTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  initValueTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelText: PropTypes.string,\n  disabled: PropTypes.bool,\n  supportedOrientations: PropTypes.arrayOf(PropTypes.oneOf(['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'])),\n  keyboardShouldPersistTaps: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  backdropPressToClose: PropTypes.bool,\n  openButtonContainerAccessible: PropTypes.bool,\n  listItemAccessible: PropTypes.bool,\n  cancelButtonAccessible: PropTypes.bool,\n  scrollViewAccessible: PropTypes.bool,\n  scrollViewAccessibilityLabel: PropTypes.string,\n  cancelButtonAccessibilityLabel: PropTypes.string,\n  passThruProps: PropTypes.object,\n  selectTextPassThruProps: PropTypes.object,\n  optionTextPassThruProps: PropTypes.object,\n  cancelTextPassThruProps: PropTypes.object,\n  scrollViewPassThruProps: PropTypes.object,\n  modalOpenerHitSlop: PropTypes.object,\n  customSelector: PropTypes.node,\n  selectedKey: PropTypes.any,\n  enableShortPress: PropTypes.bool,\n  enableLongPress: PropTypes.bool,\n  optionsTestIDPrefix: PropTypes.string\n};\nvar defaultProps = {\n  data: [],\n  onChange: function onChange() {},\n  onModalOpen: function onModalOpen() {},\n  onModalClose: function onModalClose() {},\n  keyExtractor: function keyExtractor(item) {\n    return item.key;\n  },\n  labelExtractor: function labelExtractor(item) {\n    return item.label;\n  },\n  componentExtractor: function componentExtractor(item) {\n    return item.component;\n  },\n  listType: 'SCROLLVIEW',\n  visible: false,\n  closeOnChange: true,\n  initValue: 'Select me!',\n  animationType: 'slide',\n  style: {},\n  selectStyle: {},\n  selectTextStyle: {},\n  optionStyle: {},\n  optionTextStyle: {},\n  optionContainerStyle: {},\n  sectionStyle: {},\n  childrenContainerStyle: {},\n  touchableStyle: {},\n  touchableActiveOpacity: 0.2,\n  sectionTextStyle: {},\n  selectedItemTextStyle: {},\n  cancelContainerStyle: {},\n  cancelStyle: {},\n  cancelTextStyle: {},\n  overlayStyle: {},\n  initValueTextStyle: {},\n  cancelText: 'cancel',\n  disabled: false,\n  supportedOrientations: ['portrait', 'landscape'],\n  keyboardShouldPersistTaps: 'always',\n  backdropPressToClose: false,\n  openButtonContainerAccessible: false,\n  listItemAccessible: false,\n  cancelButtonAccessible: false,\n  scrollViewAccessible: false,\n  scrollViewAccessibilityLabel: \"\",\n  cancelButtonAccessibilityLabel: \"\",\n  passThruProps: {},\n  selectTextPassThruProps: {},\n  optionTextPassThruProps: {},\n  cancelTextPassThruProps: {},\n  scrollViewPassThruProps: {},\n  modalOpenerHitSlop: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  customSelector: undefined,\n  selectedKey: '',\n  enableShortPress: true,\n  enableLongPress: false,\n  optionsTestIDPrefix: 'default'\n};\n\nvar ModalSelector = function (_React$Component) {\n  _inherits(ModalSelector, _React$Component);\n\n  var _super = _createSuper(ModalSelector);\n\n  function ModalSelector(props) {\n    var _this;\n\n    _classCallCheck(this, ModalSelector);\n\n    _this = _super.call(this, props);\n\n    _this.validateSelectedKey = function (key) {\n      var selectedItem = _this.props.data.filter(function (item) {\n        return _this.props.keyExtractor(item) === key;\n      });\n\n      var selectedLabel = selectedItem.length > 0 ? _this.props.labelExtractor(selectedItem[0]) : _this.props.initValue;\n      var selectedKey = selectedItem.length > 0 ? key : undefined;\n      return {\n        label: selectedLabel,\n        key: selectedKey\n      };\n    };\n\n    _this.onChange = function (item) {\n      if (!item || item.key == null) {\n        return;\n      }\n\n      _this.props.onChange(item);\n\n      _this.setState({\n        selected: _this.props.labelExtractor(item),\n        changedItem: item\n      }, function () {\n        if (_this.props.closeOnChange) _this.close(item);\n      });\n    };\n\n    _this.close = function (item) {\n      _this.props.onModalClose(item);\n\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.open = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!params.longPress && !_this.props.enableShortPress) {\n        return;\n      }\n\n      if (params.longPress && !_this.props.enableLongPress) {\n        return;\n      }\n\n      _this.props.onModalOpen(params);\n\n      _this.setState({\n        modalVisible: true,\n        changedItem: undefined\n      });\n    };\n\n    _this.renderSection = function (section) {\n      var optionComponent = _this.props.componentExtractor(section);\n\n      var component = optionComponent || React.createElement(Text, {\n        style: [styles.sectionTextStyle, _this.props.sectionTextStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }\n      }, _this.props.labelExtractor(section));\n      return React.createElement(View, {\n        key: _this.props.keyExtractor(section),\n        style: [styles.sectionStyle, _this.props.sectionStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, component);\n    };\n\n    _this.renderOption = function (option, isLastItem, isFirstItem) {\n      var optionComponent = _this.props.componentExtractor(option);\n\n      var optionLabel = _this.props.labelExtractor(option);\n\n      var isSelectedItem = optionLabel === _this.state.selected;\n      var component = optionComponent || React.createElement(Text, _extends({\n        style: [styles.optionTextStyle, _this.props.optionTextStyle, isSelectedItem && _this.props.selectedItemTextStyle]\n      }, _this.props.optionTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }), optionLabel);\n      return React.createElement(TouchableOpacity, _extends({\n        key: _this.props.keyExtractor(option),\n        testID: option.testID || _this.props.optionsTestIDPrefix + '-' + optionLabel,\n        onPress: function onPress() {\n          return _this.onChange(option);\n        },\n        activeOpacity: _this.props.touchableActiveOpacity,\n        accessible: _this.props.listItemAccessible,\n        accessibilityLabel: option.accessibilityLabel || undefined,\n        importantForAccessibility: isFirstItem ? 'yes' : 'no'\n      }, _this.props.passThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [styles.optionStyle, _this.props.optionStyle, isLastItem && {\n          borderBottomWidth: 0\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, component));\n    };\n\n    _this.renderFlatlistOption = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          separators = _ref.separators;\n\n      if (item.section) {\n        return _this.renderSection(item);\n      }\n\n      var numItems = _this.props.data.length;\n      return _this.renderOption(item, index === numItems - 1, index === 0);\n    };\n\n    _this.renderOptionList = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          listType = _this$props.listType,\n          backdropPressToClose = _this$props.backdropPressToClose,\n          scrollViewPassThruProps = _this$props.scrollViewPassThruProps,\n          overlayStyle = _this$props.overlayStyle,\n          optionContainerStyle = _this$props.optionContainerStyle,\n          keyboardShouldPersistTaps = _this$props.keyboardShouldPersistTaps,\n          scrollViewAccessible = _this$props.scrollViewAccessible,\n          scrollViewAccessibilityLabel = _this$props.scrollViewAccessibilityLabel,\n          cancelContainerStyle = _this$props.cancelContainerStyle,\n          touchableActiveOpacity = _this$props.touchableActiveOpacity,\n          cancelButtonAccessible = _this$props.cancelButtonAccessible,\n          cancelButtonAccessibilityLabel = _this$props.cancelButtonAccessibilityLabel,\n          cancelStyle = _this$props.cancelStyle,\n          cancelTextStyle = _this$props.cancelTextStyle,\n          cancelText = _this$props.cancelText;\n      var options = data.map(function (item, index) {\n        if (item.section) {\n          return _this.renderSection(item);\n        }\n\n        return _this.renderOption(item, index === data.length - 1, index === 0);\n      });\n      var Overlay = View;\n      var overlayProps = {\n        style: {\n          flex: 1\n        }\n      };\n\n      if (backdropPressToClose) {\n        Overlay = TouchableWithoutFeedback;\n        overlayProps = {\n          key: \"modalSelector\" + componentIndex++,\n          accessible: false,\n          onPress: _this.close\n        };\n      }\n\n      var optionsContainerStyle = {\n        paddingHorizontal: 10\n      };\n\n      if (scrollViewPassThruProps && scrollViewPassThruProps.horizontal) {\n        optionsContainerStyle.flexDirection = 'row';\n      }\n\n      return React.createElement(Overlay, _extends({}, overlayProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: [styles.overlayStyle, overlayStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: [styles.optionContainer, optionContainerStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }, listType === 'FLATLIST' ? React.createElement(FlatList, {\n        data: data,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        accessible: scrollViewAccessible,\n        accessibilityLabel: scrollViewAccessibilityLabel,\n        keyExtractor: _this.props.keyExtractor,\n        renderItem: _this.renderFlatlistOption,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 29\n        }\n      }) : React.createElement(ScrollView, _extends({\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        accessible: scrollViewAccessible,\n        accessibilityLabel: scrollViewAccessibilityLabel\n      }, scrollViewPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: optionsContainerStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 33\n        }\n      }, options))), React.createElement(View, {\n        style: [styles.cancelContainer, cancelContainerStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: _this.close,\n        activeOpacity: touchableActiveOpacity,\n        accessible: cancelButtonAccessible,\n        accessibilityLabel: cancelButtonAccessibilityLabel,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: [styles.cancelStyle, cancelStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, _extends({\n        style: [styles.cancelTextStyle, cancelTextStyle]\n      }, _this.props.cancelTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 33\n        }\n      }), cancelText))))));\n    };\n\n    _this.renderChildren = function () {\n      if (_this.props.children) {\n        return _this.props.children;\n      }\n\n      var initSelectStyle = _this.props.initValue === _this.state.selected ? [styles.initValueTextStyle, _this.props.initValueTextStyle] : [styles.selectTextStyle, _this.props.selectTextStyle];\n      return React.createElement(View, {\n        style: [styles.selectStyle, _this.props.selectStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, _extends({\n        style: initSelectStyle\n      }, _this.props.selectTextPassThruProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 17\n        }\n      }), _this.state.selected));\n    };\n\n    var _selectedItem = _this.validateSelectedKey(props.selectedKey);\n\n    _this.state = {\n      modalVisible: props.visible,\n      selected: _selectedItem.label,\n      cancelText: props.cancelText,\n      changedItem: _selectedItem.key\n    };\n    return _this;\n  }\n\n  _createClass(ModalSelector, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newState = {};\n      var doUpdate = false;\n\n      if (prevProps.initValue !== this.props.initValue) {\n        newState.selected = this.props.initValue;\n        doUpdate = true;\n      }\n\n      if (prevProps.visible !== this.props.visible) {\n        newState.modalVisible = this.props.visible;\n        doUpdate = true;\n      }\n\n      if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\n        var selectedItem = this.validateSelectedKey(this.props.selectedKey);\n        newState.selected = selectedItem.label;\n        newState.changedItem = selectedItem.key;\n        doUpdate = true;\n      }\n\n      if (doUpdate) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"getSelectedItem\",\n    value: function getSelectedItem() {\n      return this.state.changedItem;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dp = React.createElement(Modal, {\n        transparent: true,\n        ref: function ref(element) {\n          return _this2.model = element;\n        },\n        supportedOrientations: this.props.supportedOrientations,\n        visible: this.state.modalVisible,\n        onRequestClose: this.close,\n        animationType: this.props.animationType,\n        onDismiss: function onDismiss() {\n          return _this2.state.changedItem && _this2.props.onChange(_this2.state.changedItem);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }\n      }, this.renderOptionList());\n      return React.createElement(View, _extends({\n        style: this.props.style\n      }, this.props.passThruProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }\n      }), dp, this.props.customSelector ? this.props.customSelector : React.createElement(TouchableOpacity, {\n        hitSlop: this.props.modalOpenerHitSlop,\n        activeOpacity: this.props.touchableActiveOpacity,\n        style: this.props.touchableStyle,\n        onPress: this.open,\n        onLongPress: function onLongPress() {\n          return _this2.open({\n            longPress: true\n          });\n        },\n        disabled: this.props.disabled,\n        accessible: this.props.openButtonContainerAccessible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: this.props.childrenContainerStyle,\n        pointerEvents: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }\n      }, this.renderChildren())));\n    }\n  }]);\n\n  return ModalSelector;\n}(React.Component);\n\nexport { ModalSelector as default };\nModalSelector.propTypes = propTypes;\nModalSelector.defaultProps = defaultProps;","map":{"version":3,"sources":["/Users/admin/Documents/GitHub/PMCStorybook/node_modules/react-native-modal-selector/index.js"],"names":["React","PropTypes","styles","componentIndex","propTypes","data","array","onChange","func","onModalOpen","onModalClose","keyExtractor","labelExtractor","visible","bool","closeOnChange","initValue","string","listType","oneOf","animationType","style","oneOfType","object","number","selectStyle","selectTextStyle","optionStyle","optionTextStyle","optionContainerStyle","sectionStyle","childrenContainerStyle","touchableStyle","touchableActiveOpacity","sectionTextStyle","selectedItemTextStyle","cancelContainerStyle","cancelStyle","cancelTextStyle","overlayStyle","initValueTextStyle","cancelText","disabled","supportedOrientations","arrayOf","keyboardShouldPersistTaps","backdropPressToClose","openButtonContainerAccessible","listItemAccessible","cancelButtonAccessible","scrollViewAccessible","scrollViewAccessibilityLabel","cancelButtonAccessibilityLabel","passThruProps","selectTextPassThruProps","optionTextPassThruProps","cancelTextPassThruProps","scrollViewPassThruProps","modalOpenerHitSlop","customSelector","node","selectedKey","any","enableShortPress","enableLongPress","optionsTestIDPrefix","defaultProps","item","key","label","componentExtractor","component","top","bottom","left","right","undefined","ModalSelector","props","validateSelectedKey","selectedItem","filter","selectedLabel","length","setState","selected","changedItem","close","modalVisible","open","params","longPress","renderSection","section","optionComponent","renderOption","option","isLastItem","isFirstItem","optionLabel","isSelectedItem","state","testID","accessibilityLabel","borderBottomWidth","renderFlatlistOption","index","separators","numItems","renderOptionList","options","map","Overlay","View","overlayProps","flex","TouchableWithoutFeedback","accessible","onPress","optionsContainerStyle","paddingHorizontal","horizontal","flexDirection","optionContainer","cancelContainer","renderChildren","children","initSelectStyle","prevProps","prevState","newState","doUpdate","dp","element","model","Component"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    View,\r\n    Modal,\r\n    Text,\r\n    FlatList,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    TouchableWithoutFeedback,\r\n} from 'react-native';\r\n\r\nimport styles from './style';\r\n\r\nlet componentIndex = 0;\r\n\r\nconst propTypes = {\r\n    data:                           PropTypes.array,\r\n    onChange:                       PropTypes.func,\r\n    onModalOpen:                    PropTypes.func,\r\n    onModalClose:                   PropTypes.func,\r\n    keyExtractor:                   PropTypes.func,\r\n    labelExtractor:                 PropTypes.func,\r\n    visible:                        PropTypes.bool,\r\n    closeOnChange:                  PropTypes.bool,\r\n    initValue:                      PropTypes.string,\r\n    listType:                       PropTypes.oneOf(['SCROLLVIEW', 'FLATLIST']),\r\n    animationType:                  PropTypes.oneOf(['none', 'slide', 'fade']),\r\n    style:                          PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    selectStyle:                    PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    selectTextStyle:                PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    optionStyle:                    PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    optionTextStyle:                PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    optionContainerStyle:           PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    sectionStyle:                   PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    childrenContainerStyle:         PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    touchableStyle:                 PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    touchableActiveOpacity:         PropTypes.number,\r\n    sectionTextStyle:               PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    selectedItemTextStyle:          PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    cancelContainerStyle:           PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    cancelStyle:                    PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    cancelTextStyle:                PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    overlayStyle:                   PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    initValueTextStyle:             PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    cancelText:                     PropTypes.string,\r\n    disabled:                       PropTypes.bool,\r\n    supportedOrientations:          PropTypes.arrayOf(\r\n                                      PropTypes.oneOf([\r\n                                        'portrait',\r\n                                        'portrait-upside-down',\r\n                                        'landscape',\r\n                                        'landscape-left',\r\n                                        'landscape-right',\r\n                                      ]),\r\n                                    ),\r\n    keyboardShouldPersistTaps:      PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    backdropPressToClose:           PropTypes.bool,\r\n    openButtonContainerAccessible:  PropTypes.bool,\r\n    listItemAccessible:             PropTypes.bool,\r\n    cancelButtonAccessible:         PropTypes.bool,\r\n    scrollViewAccessible:           PropTypes.bool,\r\n    scrollViewAccessibilityLabel:   PropTypes.string,\r\n    cancelButtonAccessibilityLabel: PropTypes.string,\r\n    passThruProps:                  PropTypes.object,\r\n    selectTextPassThruProps:        PropTypes.object,\r\n    optionTextPassThruProps:        PropTypes.object,\r\n    cancelTextPassThruProps:        PropTypes.object,\r\n    scrollViewPassThruProps:        PropTypes.object,\r\n    modalOpenerHitSlop:             PropTypes.object,\r\n    customSelector:                 PropTypes.node,\r\n    selectedKey:                    PropTypes.any,\r\n    enableShortPress:               PropTypes.bool,\r\n    enableLongPress:                PropTypes.bool,\r\n    optionsTestIDPrefix:            PropTypes.string,\r\n};\r\n\r\nconst defaultProps = {\r\n    data:                           [],\r\n    onChange:                       () => {},\r\n    onModalOpen:                    () => {},\r\n    onModalClose:                   () => {},\r\n    keyExtractor:                   (item) => item.key,\r\n    labelExtractor:                 (item) => item.label,\r\n    componentExtractor:             (item) => item.component,\r\n    listType:                       'SCROLLVIEW',\r\n    visible:                        false,\r\n    closeOnChange:                  true,\r\n    initValue:                      'Select me!',\r\n    animationType:                  'slide',\r\n    style:                          {},\r\n    selectStyle:                    {},\r\n    selectTextStyle:                {},\r\n    optionStyle:                    {},\r\n    optionTextStyle:                {},\r\n    optionContainerStyle:           {},\r\n    sectionStyle:                   {},\r\n    childrenContainerStyle:         {},\r\n    touchableStyle:                 {},\r\n    touchableActiveOpacity:         0.2,\r\n    sectionTextStyle:               {},\r\n    selectedItemTextStyle:          {},\r\n    cancelContainerStyle:           {},\r\n    cancelStyle:                    {},\r\n    cancelTextStyle:                {},\r\n    overlayStyle:                   {},\r\n    initValueTextStyle:             {},\r\n    cancelText:                     'cancel',\r\n    disabled:                       false,\r\n    supportedOrientations:          ['portrait', 'landscape'],\r\n    keyboardShouldPersistTaps:      'always',\r\n    backdropPressToClose:           false,\r\n    openButtonContainerAccessible:  false,\r\n    listItemAccessible:             false,\r\n    cancelButtonAccessible:         false,\r\n    scrollViewAccessible:           false,\r\n    scrollViewAccessibilityLabel:   \"\",\r\n    cancelButtonAccessibilityLabel: \"\",\r\n    passThruProps:                  {},\r\n    selectTextPassThruProps:        {},\r\n    optionTextPassThruProps:        {},\r\n    cancelTextPassThruProps:        {},\r\n    scrollViewPassThruProps:        {},\r\n    modalOpenerHitSlop:             {top: 0, bottom: 0, left: 0, right: 0},\r\n    customSelector:                 undefined,\r\n    selectedKey:                    '',\r\n    enableShortPress:               true,\r\n    enableLongPress:                false,\r\n    optionsTestIDPrefix:            'default',\r\n};\r\n\r\nexport default class ModalSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let selectedItem = this.validateSelectedKey(props.selectedKey);\r\n        this.state = {\r\n            modalVisible:  props.visible,\r\n            selected:      selectedItem.label,\r\n            cancelText:    props.cancelText,\r\n            changedItem:   selectedItem.key,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let newState = {};\r\n        let doUpdate = false;\r\n        if (prevProps.initValue !== this.props.initValue) {\r\n            newState.selected = this.props.initValue;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.visible !== this.props.visible) {\r\n            newState.modalVisible = this.props.visible;\r\n            doUpdate = true;\r\n        }\r\n        if (prevProps.selectedKey !== this.props.selectedKey || prevProps.data !== this.props.data) {\r\n            let selectedItem = this.validateSelectedKey(this.props.selectedKey);\r\n            newState.selected = selectedItem.label;\r\n            newState.changedItem = selectedItem.key;\r\n            doUpdate = true;\r\n        }\r\n        if (doUpdate) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    validateSelectedKey = (key) => {\r\n        let selectedItem = this.props.data.filter((item) => this.props.keyExtractor(item) === key);\r\n        let selectedLabel = selectedItem.length > 0 ? this.props.labelExtractor(selectedItem[0]) : this.props.initValue;\r\n        let selectedKey = selectedItem.length > 0 ? key : undefined;\r\n        return {label: selectedLabel, key: selectedKey}\r\n    }\r\n\r\n    onChange = (item) => {\r\n        if (!item || item.key == null) { // == coercion\r\n          return;\r\n        }\r\n        this.props.onChange(item);\r\n        this.setState({ selected: this.props.labelExtractor(item), changedItem: item }, () => {\r\n          if (this.props.closeOnChange)\r\n            this.close(item);\r\n        });\r\n    }\r\n\r\n    getSelectedItem() {\r\n      return this.state.changedItem;\r\n    }\r\n\r\n    close = (item) => {\r\n        this.props.onModalClose(item);\r\n        this.setState({\r\n            modalVisible: false,\r\n        });\r\n    }\r\n\r\n    open = (params = {}) => {\r\n        if (!params.longPress && !this.props.enableShortPress) {\r\n          return;\r\n        }\r\n        if (params.longPress && !this.props.enableLongPress) {\r\n          return;\r\n        }\r\n        this.props.onModalOpen(params);\r\n        this.setState({\r\n            modalVisible: true,\r\n            changedItem:  undefined,\r\n        });\r\n    }\r\n\r\n    renderSection = (section) => {\r\n        const optionComponent = this.props.componentExtractor(section);\r\n        let component = optionComponent || (\r\n          <Text style={[styles.sectionTextStyle,this.props.sectionTextStyle]}>{this.props.labelExtractor(section)}</Text>\r\n        );\r\n\r\n        return (\r\n            <View key={this.props.keyExtractor(section)} style={[styles.sectionStyle,this.props.sectionStyle]}>\r\n                {component}\r\n            </View>\r\n        );\r\n    }\r\n\r\n    renderOption = (option, isLastItem, isFirstItem) => {\r\n        const optionComponent = this.props.componentExtractor(option);\r\n        const optionLabel = this.props.labelExtractor(option);\r\n        const isSelectedItem = optionLabel === this.state.selected;\r\n\r\n        let component = optionComponent || (\r\n          <Text style={[styles.optionTextStyle,this.props.optionTextStyle,isSelectedItem && this.props.selectedItemTextStyle]} {...this.props.optionTextPassThruProps}>\r\n              {optionLabel}\r\n          </Text>\r\n        );\r\n\r\n        return (\r\n            <TouchableOpacity\r\n              key={this.props.keyExtractor(option)}\r\n              testID={option.testID || this.props.optionsTestIDPrefix + '-' + optionLabel}\r\n              onPress={() => this.onChange(option)}\r\n              activeOpacity={this.props.touchableActiveOpacity}\r\n              accessible={this.props.listItemAccessible}\r\n              accessibilityLabel={option.accessibilityLabel || undefined}\r\n              importantForAccessibility={isFirstItem ? 'yes' : 'no'}\r\n              {...this.props.passThruProps}\r\n            >\r\n                <View style={[styles.optionStyle, this.props.optionStyle, isLastItem && {borderBottomWidth: 0}]}>\r\n                  {component}\r\n                </View>\r\n            </TouchableOpacity>);\r\n    }\r\n\r\n    renderFlatlistOption = ({ item, index, separators }) => {\r\n        if (item.section) {\r\n            return this.renderSection(item);\r\n        }\r\n        const numItems = this.props.data.length;\r\n        return this.renderOption(item, index === (numItems - 1), index === 0);\r\n    }\r\n\r\n    renderOptionList = () => {\r\n        const {\r\n            data,\r\n            listType,\r\n            backdropPressToClose,\r\n            scrollViewPassThruProps,\r\n            overlayStyle,\r\n            optionContainerStyle,\r\n            keyboardShouldPersistTaps,\r\n            scrollViewAccessible,\r\n            scrollViewAccessibilityLabel,\r\n            cancelContainerStyle,\r\n            touchableActiveOpacity,\r\n            cancelButtonAccessible,\r\n            cancelButtonAccessibilityLabel,\r\n            cancelStyle,\r\n            cancelTextStyle,\r\n            cancelText,\r\n        } = this.props;\r\n\r\n        let options = data.map((item, index) => {\r\n            if (item.section) {\r\n                return this.renderSection(item);\r\n            }\r\n            return this.renderOption(item, index === data.length - 1, index === 0);\r\n        });\r\n\r\n        let Overlay = View;\r\n        let overlayProps = {\r\n            style: {flex: 1},\r\n        };\r\n        // Some RN versions have a bug here, so making the property opt-in works around this problem\r\n        if (backdropPressToClose) {\r\n          Overlay = TouchableWithoutFeedback;\r\n          overlayProps = {\r\n              key: `modalSelector${componentIndex++}`,\r\n              accessible: false,\r\n              onPress: this.close,\r\n          };\r\n        }\r\n\r\n        const optionsContainerStyle = {paddingHorizontal: 10};\r\n        if (scrollViewPassThruProps && scrollViewPassThruProps.horizontal) {\r\n          optionsContainerStyle.flexDirection = 'row';\r\n        }\r\n\r\n        return (\r\n            <Overlay {...overlayProps}>\r\n                <View style={[styles.overlayStyle, overlayStyle]}>\r\n                    <View style={[styles.optionContainer, optionContainerStyle]}>\r\n                        {listType === 'FLATLIST'?\r\n                            <FlatList\r\n                                data={data}\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                accessible={scrollViewAccessible}\r\n                                accessibilityLabel={scrollViewAccessibilityLabel}\r\n                                keyExtractor={this.props.keyExtractor}\r\n                                renderItem={this.renderFlatlistOption}\r\n                            />\r\n                            :\r\n                            <ScrollView\r\n                                keyboardShouldPersistTaps={keyboardShouldPersistTaps}\r\n                                accessible={scrollViewAccessible}\r\n                                accessibilityLabel={scrollViewAccessibilityLabel}\r\n                                {...scrollViewPassThruProps}\r\n                            >\r\n                                <View style={optionsContainerStyle}>\r\n                                    {options}\r\n                                </View>\r\n                            </ScrollView>\r\n                        }\r\n                    </View>\r\n                    <View style={[styles.cancelContainer, cancelContainerStyle]}>\r\n                        <TouchableOpacity onPress={this.close} activeOpacity={touchableActiveOpacity} accessible={cancelButtonAccessible} accessibilityLabel={cancelButtonAccessibilityLabel}>\r\n                            <View style={[styles.cancelStyle, cancelStyle]}>\r\n                                <Text style={[styles.cancelTextStyle,cancelTextStyle]} {...this.props.cancelTextPassThruProps}>{cancelText}</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Overlay>\r\n        );\r\n    }\r\n\r\n    renderChildren = () => {\r\n\r\n        if(this.props.children) {\r\n            return this.props.children;\r\n        }\r\n        let initSelectStyle = this.props.initValue === this.state.selected ?\r\n            [styles.initValueTextStyle, this.props.initValueTextStyle] : [styles.selectTextStyle, this.props.selectTextStyle];\r\n        return (\r\n            <View style={[styles.selectStyle, this.props.selectStyle]}>\r\n                <Text style={initSelectStyle} {...this.props.selectTextPassThruProps}>{this.state.selected}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const dp = (\r\n            <Modal\r\n                transparent={true}\r\n                ref={element => this.model = element}\r\n                supportedOrientations={this.props.supportedOrientations}\r\n                visible={this.state.modalVisible}\r\n                onRequestClose={this.close}\r\n                animationType={this.props.animationType}\r\n                onDismiss={() => this.state.changedItem && this.props.onChange(this.state.changedItem)}\r\n            >\r\n                {this.renderOptionList()}\r\n            </Modal>\r\n        );\r\n\r\n        return (\r\n            <View style={this.props.style} {...this.props.passThruProps}>\r\n                {dp}\r\n                {this.props.customSelector ?\r\n                    this.props.customSelector\r\n                    :\r\n                    <TouchableOpacity\r\n                        hitSlop={this.props.modalOpenerHitSlop}\r\n                        activeOpacity={this.props.touchableActiveOpacity}\r\n                        style={this.props.touchableStyle}\r\n                        onPress={this.open}\r\n                        onLongPress={() => this.open({longPress: true})}\r\n                        disabled={this.props.disabled}\r\n                        accessible={this.props.openButtonContainerAccessible}\r\n                    >\r\n                        <View style={this.props.childrenContainerStyle} pointerEvents=\"none\">\r\n                            {this.renderChildren()}\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nModalSelector.propTypes = propTypes;\r\nModalSelector.defaultProps = defaultProps;\r\n"]},"metadata":{},"sourceType":"module"}